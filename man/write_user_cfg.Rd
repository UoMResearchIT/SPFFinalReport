% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/config.R
\name{write_user_cfg}
\alias{write_user_cfg}
\title{Write the user-specific config to file}
\usage{
write_user_cfg(
  cfg = NULL,
  cfg_dir = NULL,
  cfg_name = NULL,
  template_dir_name = NULL,
  template_name = NULL,
  overwrite = NULL
)
}
\arguments{
\item{cfg}{A list of nested lists, with 'leaf' nodes specifying configuration
values. Default: The template config returned by \code{\link[=generate_cfg_template]{generate_cfg_template()}}}

\item{cfg_dir}{A character string specifying the config directory, or NULL
for the default. Default: An OS-specific path for user configuration files
in the user's home directory.}

\item{cfg_name}{A character string specifying the config file name, or NULL
for the default. Default: 'config.yml'}

\item{template_dir_name}{A character string: the name of the config template
sub-directory or NULL for the default. Default: 'config'}

\item{template_name}{A character string: the name of the config template file
or NULL for the default. Default: The name returned by
\code{\link[=get_cfg_template_name]{get_cfg_template_name()}}}

\item{overwrite}{A boolean to indicate whether an existing config file
should be overwritten. Default: FALSE}
}
\value{
NULL (invisibly)
}
\description{
Write the user-specific configuration to file. If no config is supplied, this
function can create a fresh config file by copying the template to the
appropriate location.
}
\examples{
\dontrun{
write_user_cfg()
write_user_cfg(overwrite = TRUE)

# Override a value in the config template before saving
cfg <- generate_cfg_template()
cfg <- modifyList(cfg, list(dat = list(raw = list(base = "Data-dir"))))
write_user_cfg(cfg)
}
}
