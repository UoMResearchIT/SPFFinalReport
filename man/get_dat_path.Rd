% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/config.R
\name{get_dat_path}
\alias{get_dat_path}
\title{Get a path value from the configuration}
\usage{
get_dat_path(dat_keys, env = NULL, cfg_dir = NULL, cfg_name = NULL, cfg = NULL)
}
\arguments{
\item{dat_keys}{A character vector where each element is a key in the same
format as expected by \code{\link[=get_cfg_val]{get_cfg_val()}}. These are single character strings
of hierarchical keys to look up (with each level of the hierarchy separated
by a dot).}

\item{env}{A character string specifying the environment for which to get the
path. This should be one of 'main', 'ref' or 'test'. See section \emph{Details}
for more information.}

\item{cfg_dir}{A character string specifying the config directory, or NULL
for the default. Default: An OS-specific path for user configuration files
in the user's home directory.}

\item{cfg_name}{A character string specifying the config file name, or NULL
for the default. Default: 'config.yml'}

\item{cfg}{A list of nested lists, with 'leaf' nodes specifying configuration
values. Default: The template config returned by \code{\link[=generate_cfg_template]{generate_cfg_template()}}}
}
\value{
A character string: the requested path, retrieved from the default
config or the given config, if provided.
}
\description{
Get a path value from the configuration
}
\examples{
get_dat_path("store.dat.wrangled.base_dir", cfg = generate_cfg_template())

cfg <- get_cfg_val("store.dat.raw", cfg = generate_cfg_template())
dat_keys <- c("base_dir", "dir_names.shapefiles")
get_dat_path(dat_keys, "ref", cfg = cfg)

}
