% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/config-validation.R
\name{ensure_cfg_param_types}
\alias{ensure_cfg_param_types}
\title{Ensure parameters are of the expected type}
\usage{
ensure_cfg_param_types(
  exp_keys = NULL,
  cfg_dir = NULL,
  cfg_name = NULL,
  key_sep = NULL,
  invalid_keys = NULL,
  cfg = NULL
)
}
\arguments{
\item{exp_keys}{A character vector of expected config keys or NULL for the
default. Default: Keys as returned by \code{\link[=get_cfg_template_keys]{get_cfg_template_keys()}}}

\item{cfg_dir}{A character string specifying the config directory, or NULL
for the default. Default: An OS-specific path for user configuration files
in the user's home directory.}

\item{cfg_name}{A character string specifying the config file name, or NULL
for the default. Default: 'config.yml'}

\item{key_sep}{A character string specifying the separator between
hierarchical key elements. Default: '.'}

\item{invalid_keys}{A character vector of keys which have been identified as
invalid (could be empty).}

\item{cfg}{A list of nested lists, with 'leaf' nodes specifying configuration
values. Default: The template config returned by \code{\link[=generate_cfg_template]{generate_cfg_template()}}}
}
\value{
NULL (invisibly).
}
\description{
Ensure parameters are of the expected type
}
\examples{
ensure_cfg_param_types()
\dontrun{
ensure_cfg_param_types(exp_keys, cfg_dir, cfg_name, key_sep, invalid_keys,
                       cfg)
}

}
