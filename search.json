[{"path":"https://UoMResearchIT.github.io/SPFFinalReport/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/articles/config.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"Config","text":"vignette describes configure dimex package. See introduction dimex context. information configuration relevant within development environment, see development. two categories configuration: localised (environment-dependent) default package-level configuration can customised user’s circumstances required. Environment-dependent configuration values specified via system environment variables, whilst package-level configuration values specified via config object.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/articles/config.html","id":"sys-env-vars","dir":"Articles","previous_headings":"","what":"System Environment Variables for localised configuration","title":"Config","text":"localised configuration, system environment variables specified file called .Renviron , default location, loaded automatically start R session. user-specific .Renviron typically stored : Windows: Ensure file name exactly “.Renviron” (without file extension like .txt) Linux/macOS: Create file necessary. within R, usethis package can : Entries project-level .Renviron file, located working directory project root, take precedence user-specific file. Note project-level file exists added .gitignore .Rbuildignore committed source code repository included package code. (project .gitignore .Rbuildignore contain entries default.) usethis package supports creation/editing project-level .Renviron file : NB Note need reload .Renviron file changes take effect. can achieved one following: Restart R session Reload .Renviron running R session , e.g. (shoul replace “~/.Renviron” appropriate path .Renviron file ’s home directory) temporary alternative reloading .Renviron manually override specific environment variables within current R session: can helpful testing specific changes without modifying environment file. System environment variables dimex package start ‘DIMEX_’. [TODO: Add info act, ref test root paths]","code":"C:\\Users\\YourUsername\\.Renviron ~/.Renviron # Create a new user-level .Renviron file, or open an existing one for editing usethis::edit_r_environ(\"user\") # Or, as this is the default: usethis::edit_r_environ() # Create a new project-level .Renviron file, or open an existing one for editing usethis::edit_r_environ(\"project\") readRenviron(\"~/.Renviron\") Sys.setenv(VAR_NAME = \"value\")"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/articles/config.html","id":"renviron-file","dir":"Articles","previous_headings":"","what":".Renviron file","title":"Config","text":"localised configuration, system environment variables specified file called .Renviron , default location, loaded automatically start R session. user-specific .Renviron typically stored : Windows: Ensure file name exactly “.Renviron” (without file extension like .txt) Linux/macOS: Create file necessary. within R, usethis package can : Entries project-level .Renviron file, located working directory project root, take precedence user-specific file. Note project-level file exists added .gitignore .Rbuildignore committed source code repository included package code. (project .gitignore .Rbuildignore contain entries default.) usethis package supports creation/editing project-level .Renviron file : NB Note need reload .Renviron file changes take effect. can achieved one following: Restart R session Reload .Renviron running R session , e.g. (shoul replace “~/.Renviron” appropriate path .Renviron file ’s home directory) temporary alternative reloading .Renviron manually override specific environment variables within current R session: can helpful testing specific changes without modifying environment file.","code":"C:\\Users\\YourUsername\\.Renviron ~/.Renviron # Create a new user-level .Renviron file, or open an existing one for editing usethis::edit_r_environ(\"user\") # Or, as this is the default: usethis::edit_r_environ() # Create a new project-level .Renviron file, or open an existing one for editing usethis::edit_r_environ(\"project\") readRenviron(\"~/.Renviron\") Sys.setenv(VAR_NAME = \"value\")"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/articles/config.html","id":"valid-system-environment-variables","dir":"Articles","previous_headings":"","what":"Valid system environment variables","title":"Config","text":"System environment variables dimex package start ‘DIMEX_’. [TODO: Add info act, ref test root paths]","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/articles/config.html","id":"pkg-config","dir":"Articles","previous_headings":"","what":"The config object for package-level configuration","title":"Config","text":"configuration relates package-level values necessarily need customising, long user’s data output personal filesystem conforms expected structure. required, configuration can customised stored per-user basis.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/articles/config.html","id":"config-template","dir":"Articles","previous_headings":"","what":"The config template","title":"Config","text":"create default configuration first time save personal system, run: location saved configuration file OS-specific. default directory set according OS convention: dimex package expects find configuration file within directory. update recreate config file, run: Though note currently conversion path existing config files custom changes need manually re-applied.","code":"write_user_cfg() write_user_cfg(overwrite = TRUE)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/articles/config.html","id":"default-config-values","dir":"Articles","previous_headings":"","what":"Default config values and overriding them","title":"Config","text":"Defaults: [TODO: Describe defaults] general, defaults can overridden manually editing config. [TODO: Show examples overriding defaults]","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/articles/development.html","id":"about-this-vignette","dir":"Articles","previous_headings":"","what":"About this vignette","title":"Development","text":"vignette deals use dimex package developer. See also introduction dimex configuration vignettes.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/articles/development.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Development","text":"development environment: Ensure devtools installed.  R console: Ensure required packages installed.  [TODO: Implement renv add setup instructions] See configuration vignette configuration information. commands executed R console. (Note devtools installed, following commands usually bound keyboard shortcuts RStudio; shown comments applicable) Load development version package: Run automated test suite: Create package documentation: Build package vignettes: Run package check: Test current file: using RStudio, can easily achieved setting keyboard shortcut. example, RStudio Go Tools | Modify Keyboard Shortcuts… Filter… bar type ‘test’ Locate ‘Run test’ Addin, select Shortcut type ‘Ctrl + T’ (whatever preferred key sequence ), click Apply shortcut now run devtools:::test_active_file().","code":"> install.packages(\"devtools\") # Ctrl/Cmd + Shift + L > devtools::load_all(\".\") # Ctrl/Cmd + Shift + T > devtools::test(\".\") # Ctrl/Cmd + Shift + D > devtools::document(roclets = c('rd', 'collate', 'namespace')) > devtools::build_vignettes() # Ctrl/Cmd + Shift + E > devtools::check()"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/articles/development.html","id":"devtools","dir":"Articles","previous_headings":"","what":"devtools","title":"Development","text":"Ensure devtools installed.  R console: Ensure required packages installed.  [TODO: Implement renv add setup instructions] See configuration vignette configuration information.","code":"> install.packages(\"devtools\")"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/articles/development.html","id":"some-useful-dev-commands","dir":"Articles","previous_headings":"","what":"Some useful dev commands","title":"Development","text":"commands executed R console. (Note devtools installed, following commands usually bound keyboard shortcuts RStudio; shown comments applicable) Load development version package: Run automated test suite: Create package documentation: Build package vignettes: Run package check: Test current file: using RStudio, can easily achieved setting keyboard shortcut. example, RStudio Go Tools | Modify Keyboard Shortcuts… Filter… bar type ‘test’ Locate ‘Run test’ Addin, select Shortcut type ‘Ctrl + T’ (whatever preferred key sequence ), click Apply shortcut now run devtools:::test_active_file().","code":"# Ctrl/Cmd + Shift + L > devtools::load_all(\".\") # Ctrl/Cmd + Shift + T > devtools::test(\".\") # Ctrl/Cmd + Shift + D > devtools::document(roclets = c('rd', 'collate', 'namespace')) > devtools::build_vignettes() # Ctrl/Cmd + Shift + E > devtools::check()"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/articles/development.html","id":"development-configuration","dir":"Articles","previous_headings":"","what":"Development configuration","title":"Development","text":"can specify environment variables control whether run ‘high-level’ data tests (, tests check saved reference data datasets produced running code). slow – many take ~10 seconds run – skipped default. run need set system environment variables .Renviron file root package directory: , either set DIMEX_RUN_ALL_HLDT=true, test wish run, set appropriate DIMEX_RUN_HLDT_1*=true, example: Note environment variables exist, set anything ‘true’, corresponding high level data tests run. way possible run test relevant currently working , whilst still running rest test suite. Use DIMEX_RUN_ALL_HLDT=true run high-level data tests, irrespective DIMEX_RUN_HLDT_1* values. words, DIMEX_RUN_ALL_HLDT=true override individual settings. can useful making changes checking individual test, easily verify high-level data tests still pass. temporarily set specific high-level data test run current R session, run (e.g.): reverse , one following: temporarily set high-level data tests run current R session, use: reverse , one following: update config template, edit functions [generate_cfg_template()] [get_cfg_template_keys()]. Note NB: updating config template, save updated copy package config location running: Note NB:  Changing template necessitate updating user config files already created. currently mechanism convert format user config file time can implemented, local changes user config need manually updated. update user config, run:","code":"DIMEX_RUN_ALL_HLDT=true  # Set to 'true' or 'false' (or do not specify) DIMEX_RUN_HLDT_1*=true   # Set to 'true' or 'false' (or do not specify) DIMEX_RUN_HLDT_1A=true DIMEX_RUN_HLDT_1D=true # Set the high-level data test for step \"1a\" to run Sys.setenv(DIMEX_RUN_HLDT_1A = \"true\") Sys.setenv(DIMEX_RUN_HLDT_1A = \"false\") # Or: Sys.unsetenv(\"DIMEX_RUN_HLDT_1A\") Sys.setenv(DIMEX_RUN_ALL_HLDT = \"true\") Sys.setenv(DIMEX_RUN_ALL_HLDT = \"false\") # Or: Sys.unsetenv(\"DIMEX_RUN_ALL_HLDT\") write_cfg_template() # NB: The following will *overwrite* any local changes to the user config! # Until there is a conversion utility available, local changes will need to be # *manually updated*. write_user_cfg(overwrite = TRUE)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/articles/development.html","id":"variables-in--renviron","dir":"Articles","previous_headings":"","what":"Variables in .Renviron","title":"Development","text":"can specify environment variables control whether run ‘high-level’ data tests (, tests check saved reference data datasets produced running code). slow – many take ~10 seconds run – skipped default. run need set system environment variables .Renviron file root package directory: , either set DIMEX_RUN_ALL_HLDT=true, test wish run, set appropriate DIMEX_RUN_HLDT_1*=true, example: Note environment variables exist, set anything ‘true’, corresponding high level data tests run. way possible run test relevant currently working , whilst still running rest test suite. Use DIMEX_RUN_ALL_HLDT=true run high-level data tests, irrespective DIMEX_RUN_HLDT_1* values. words, DIMEX_RUN_ALL_HLDT=true override individual settings. can useful making changes checking individual test, easily verify high-level data tests still pass. temporarily set specific high-level data test run current R session, run (e.g.): reverse , one following: temporarily set high-level data tests run current R session, use: reverse , one following:","code":"DIMEX_RUN_ALL_HLDT=true  # Set to 'true' or 'false' (or do not specify) DIMEX_RUN_HLDT_1*=true   # Set to 'true' or 'false' (or do not specify) DIMEX_RUN_HLDT_1A=true DIMEX_RUN_HLDT_1D=true # Set the high-level data test for step \"1a\" to run Sys.setenv(DIMEX_RUN_HLDT_1A = \"true\") Sys.setenv(DIMEX_RUN_HLDT_1A = \"false\") # Or: Sys.unsetenv(\"DIMEX_RUN_HLDT_1A\") Sys.setenv(DIMEX_RUN_ALL_HLDT = \"true\") Sys.setenv(DIMEX_RUN_ALL_HLDT = \"false\") # Or: Sys.unsetenv(\"DIMEX_RUN_ALL_HLDT\")"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/articles/development.html","id":"the-config-template","dir":"Articles","previous_headings":"","what":"The config template","title":"Development","text":"update config template, edit functions [generate_cfg_template()] [get_cfg_template_keys()]. Note NB: updating config template, save updated copy package config location running: Note NB:  Changing template necessitate updating user config files already created. currently mechanism convert format user config file time can implemented, local changes user config need manually updated. update user config, run:","code":"write_cfg_template() # NB: The following will *overwrite* any local changes to the user config! # Until there is a conversion utility available, local changes will need to be # *manually updated*. write_user_cfg(overwrite = TRUE)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/articles/dimex.html","id":"dimex","dir":"Articles","previous_headings":"","what":"DIMEX","title":"dimex","text":"Data Integration Model personal EXposures package implements DIMEX model. package derived SPFFinalReport code (created case study report final SPF reporting period). See also configuration development vignettes. [TODO: TBC]","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/articles/dimex.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"dimex","text":"package implements DIMEX model. package derived SPFFinalReport code (created case study report final SPF reporting period). See also configuration development vignettes.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/articles/dimex.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"dimex","text":"[TODO: TBC]","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/articles/dimex.html","id":"data-workflow","dir":"Articles","previous_headings":"","what":"Data workflow","title":"dimex","text":"Initial input raw data (e.g. ‘.csv’ files, ‘.nc’ files). Raw data processed transforming, merging, etc. (collectively called ‘wrangling’). wrangled data finally used producing output. data wrangling phases, three possible environments: data produced running current version code can used automated tests compare reference data historical data comparison data produced current code ensure code working expected continues changes made code small enough use unit/integration tests can reliably reproduced","code":"flowchart LR   A(\"Raw\") --> B(\"Wrangled\")   B --> C(\"Output\")"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/articles/dimex.html","id":"data-phases","dir":"Articles","previous_headings":"","what":"Data phases","title":"dimex","text":"Initial input raw data (e.g. ‘.csv’ files, ‘.nc’ files). Raw data processed transforming, merging, etc. (collectively called ‘wrangling’). wrangled data finally used producing output.","code":"flowchart LR   A(\"Raw\") --> B(\"Wrangled\")   B --> C(\"Output\")"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/articles/dimex.html","id":"environments","dir":"Articles","previous_headings":"","what":"Environments","title":"dimex","text":"data wrangling phases, three possible environments: data produced running current version code can used automated tests compare reference data historical data comparison data produced current code ensure code working expected continues changes made code small enough use unit/integration tests can reliably reproduced","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/articles/dimex.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting started","title":"dimex","text":"See configuration configuration information. main entry point running code run_workflow() function. called without arguments, run workflow steps default. can also: Check steps run providing banner_only argument (case steps run banner printed step); Run subset steps supplying comma-separated string step IDs, example,  “4a, 4b” “1a”.","code":"# Run each step in the workflow with the default config run_workflow()  # Run steps 4a and 4b only run_workflow(\"4a, 4b\")  # Don't run any steps but print out the banner to show each step run_workflow(banner_only = TRUE)  # Run steps 4a and 4b only, with the specified config # See the [configuration](config.html) vignette for information on # how to create a non-default config # # [TODO: Show example of creating a config] # # cfg = ... # # cfg_overrides = ... run_workflow(\"4a, 4b\", cfg = cfg, cfg_overrides = cfg_overrides)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/articles/dimex.html","id":"configuration","dir":"Articles","previous_headings":"","what":"Configuration","title":"dimex","text":"See configuration configuration information.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/articles/dimex.html","id":"running-the-pipeline","dir":"Articles","previous_headings":"","what":"Running the pipeline","title":"dimex","text":"main entry point running code run_workflow() function. called without arguments, run workflow steps default. can also: Check steps run providing banner_only argument (case steps run banner printed step); Run subset steps supplying comma-separated string step IDs, example,  “4a, 4b” “1a”.","code":"# Run each step in the workflow with the default config run_workflow()  # Run steps 4a and 4b only run_workflow(\"4a, 4b\")  # Don't run any steps but print out the banner to show each step run_workflow(banner_only = TRUE)  # Run steps 4a and 4b only, with the specified config # See the [configuration](config.html) vignette for information on # how to create a non-default config # # [TODO: Show example of creating a config] # # cfg = ... # # cfg_overrides = ... run_workflow(\"4a, 4b\", cfg = cfg, cfg_overrides = cfg_overrides)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/articles/dimex.html","id":"development","dir":"Articles","previous_headings":"","what":"Development","title":"dimex","text":"development work dimex package, see development vignette.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Matthew Thomas. Author. Toni Price. Author, maintainer.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Thomas M, Price T (2024). dimex: Data Integration Model personal EXposures (DIMEX). R package version 0.1.0, https://github.com/UoMResearchIT/SPFFinalReport/, https://UoMResearchIT.github.io/SPFFinalReport/.","code":"@Manual{,   title = {dimex: Data Integration Model for personal EXposures (DIMEX)},   author = {Matthew Thomas and Toni Price},   year = {2024},   note = {R package version 0.1.0, https://github.com/UoMResearchIT/SPFFinalReport/},   url = {https://UoMResearchIT.github.io/SPFFinalReport/}, }"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/index.html","id":"dimex","dir":"","previous_headings":"","what":"Data Integration Model for personal EXposures (DIMEX)","title":"Data Integration Model for personal EXposures (DIMEX)","text":"Data Integration Model personal EXposures dimex R package implements DIMEX model. package derived SPFFinalReport code (created case study report final SPF reporting period). Browse source code See Get started information.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/cat_info_sep.html","id":null,"dir":"Reference","previous_headings":"","what":"Print an informational message with a preceding blank line — cat_info_sep","title":"Print an informational message with a preceding blank line — cat_info_sep","text":"Print informational message preceding blank line","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/cat_info_sep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print an informational message with a preceding blank line — cat_info_sep","text":"","code":"cat_info_sep(msg)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/cat_info_sep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print an informational message with a preceding blank line — cat_info_sep","text":"msg message print.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/cat_info_sep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print an informational message with a preceding blank line — cat_info_sep","text":"value returned cli::cli_inform()","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/cat_info_sep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print an informational message with a preceding blank line — cat_info_sep","text":"","code":"cat_info_sep(\"Doing something\") #>  #> Doing something"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/cat_rule_sep.html","id":null,"dir":"Reference","previous_headings":"","what":"Print an informational 'separator' rule with a preceding blank line — cat_rule_sep","title":"Print an informational 'separator' rule with a preceding blank line — cat_rule_sep","text":"Print informational 'separator' rule preceding blank line","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/cat_rule_sep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print an informational 'separator' rule with a preceding blank line — cat_rule_sep","text":"","code":"cat_rule_sep(title = NULL, width = NULL)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/cat_rule_sep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print an informational 'separator' rule with a preceding blank line — cat_rule_sep","text":"title title print rule, NULL none. Default: NULL width rule width, NULL half console width. Default: NULL","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/cat_rule_sep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print an informational 'separator' rule with a preceding blank line — cat_rule_sep","text":"value returned cli::cat_rule()","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/cat_rule_sep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print an informational 'separator' rule with a preceding blank line — cat_rule_sep","text":"","code":"cat_rule_sep() #>  #> ──────────────────────────────────────── cat_rule_sep(\"An informational message\") #>  #> ── An informational message ──────────── cat_rule_sep(\"An informational message\", width = cli::console_width()) #>  #> ── An informational message ────────────────────────────────────────────────────"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/cfg_keys_all_valid.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a config has any invalid keys — cfg_keys_all_valid","title":"Check if a config has any invalid keys — cfg_keys_all_valid","text":"Check config invalid keys","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/cfg_keys_all_valid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a config has any invalid keys — cfg_keys_all_valid","text":"","code":"cfg_keys_all_valid(   exp_keys = NULL,   cfg_dir = NULL,   cfg_name = NULL,   invalid_keys = NULL,   cfg = NULL )"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/cfg_keys_all_valid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a config has any invalid keys — cfg_keys_all_valid","text":"exp_keys character vector expected config keys NULL default. Default: Keys returned get_cfg_template_keys() cfg_dir character string specifying config directory, NULL default. Default: OS-specific path user configuration files user's home directory. cfg_name character string specifying config file name, NULL default. Default: 'config.yml' invalid_keys character vector keys identified invalid (empty). cfg list nested lists, 'leaf' nodes specifying configuration values. Default: template config returned generate_cfg_template()","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/cfg_keys_all_valid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a config has any invalid keys — cfg_keys_all_valid","text":"TRUE keys valid, FALSE otherwise.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/cfg_keys_all_valid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if a config has any invalid keys — cfg_keys_all_valid","text":"","code":"cfg_keys_all_valid() #> Warning: cannot open file '/home/runner/.config/R-dimex/config.yml': No such file or directory #> Error in file(file, \"rt\", encoding = fileEncoding): cannot open the connection"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/collate_results_jul_2021.html","id":null,"dir":"Reference","previous_headings":"","what":"Collate results for July 2021 — collate_results_jul_2021","title":"Collate results for July 2021 — collate_results_jul_2021","text":"Collate results July 2021","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/collate_results_jul_2021.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collate results for July 2021 — collate_results_jul_2021","text":"","code":"collate_results_jul_2021(cfg = NULL, msoa_lim = NULL)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/collate_results_jul_2021.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collate results for July 2021 — collate_results_jul_2021","text":"cfg list nested lists, 'leaf' nodes specifying configuration values. Default: template config returned generate_cfg_template() msoa_lim Number MSOAs process. Default: Number unique MSOAs","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/collate_results_jul_2021.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collate results for July 2021 — collate_results_jul_2021","text":"NULL (invisibly).","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/collate_results_jul_2021.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collate results for July 2021 — collate_results_jul_2021","text":"","code":"if (FALSE) { # \\dontrun{ collate_results_jul_2021() } # }"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/collate_results_q1_2021.html","id":null,"dir":"Reference","previous_headings":"","what":"Collate results for Q1 2021 — collate_results_q1_2021","title":"Collate results for Q1 2021 — collate_results_q1_2021","text":"Collate results Q1 2021","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/collate_results_q1_2021.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collate results for Q1 2021 — collate_results_q1_2021","text":"","code":"collate_results_q1_2021(cfg = NULL, msoa_lim = NULL)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/collate_results_q1_2021.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collate results for Q1 2021 — collate_results_q1_2021","text":"cfg list nested lists, 'leaf' nodes specifying configuration values. Default: template config returned generate_cfg_template() msoa_lim Number MSOAs process. Default: Number unique MSOAs","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/collate_results_q1_2021.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collate results for Q1 2021 — collate_results_q1_2021","text":"NULL (invisibly).","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/collate_results_q1_2021.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collate results for Q1 2021 — collate_results_q1_2021","text":"","code":"if (FALSE) { # \\dontrun{ collate_results_q1_2021() } # }"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/dimex-package.html","id":null,"dir":"Reference","previous_headings":"","what":"dimex: Data Integration Model for personal EXposures (DIMEX) — dimex-package","title":"dimex: Data Integration Model for personal EXposures (DIMEX) — dimex-package","text":"Models personal exposure pollution. Package derived SPFFinalReport repository (created case study report final SPF reporting period).","code":""},{"path":[]},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/dimex-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"dimex: Data Integration Model for personal EXposures (DIMEX) — dimex-package","text":"Maintainer: Toni Price maintainer-placeholder@example.com Authors: Matthew Thomas","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/drop_locn.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop the name of the 'location' column from a vector of names — drop_locn","title":"Drop the name of the 'location' column from a vector of names — drop_locn","text":"Drop name 'location' column vector names","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/drop_locn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop the name of the 'location' column from a vector of names — drop_locn","text":"","code":"drop_locn(str_nms, nm_to_drop = NULL)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/drop_locn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop the name of the 'location' column from a vector of names — drop_locn","text":"str_nms character vector names. nm_to_drop character string: name drop str_nms.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/drop_locn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drop the name of the 'location' column from a vector of names — drop_locn","text":"supplied character vector excluding nm_to_drop.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/drop_locn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Drop the name of the 'location' column from a vector of names — drop_locn","text":"","code":"drop_locn(c(\"age\", \"type\", \"activity\", \"location\")) #> [1] \"age\"      \"type\"     \"activity\" # => c(\"age\", \"type\", \"activity\")  drop_locn(c(\"age\", \"type\", \"activity\", \"locn\"), nm_to_drop = \"locn\") #> [1] \"age\"      \"type\"     \"activity\" # => c(\"age\", \"type\", \"activity\")"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/ensure_cfg_param_types.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensure parameters are of the expected type — ensure_cfg_param_types","title":"Ensure parameters are of the expected type — ensure_cfg_param_types","text":"Ensure parameters expected type","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/ensure_cfg_param_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensure parameters are of the expected type — ensure_cfg_param_types","text":"","code":"ensure_cfg_param_types(   exp_keys = NULL,   cfg_dir = NULL,   cfg_name = NULL,   invalid_keys = NULL,   cfg = NULL )"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/ensure_cfg_param_types.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensure parameters are of the expected type — ensure_cfg_param_types","text":"exp_keys character vector expected config keys NULL default. Default: Keys returned get_cfg_template_keys() cfg_dir character string specifying config directory, NULL default. Default: OS-specific path user configuration files user's home directory. cfg_name character string specifying config file name, NULL default. Default: 'config.yml' invalid_keys character vector keys identified invalid (empty). cfg list nested lists, 'leaf' nodes specifying configuration values. Default: template config returned generate_cfg_template()","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/ensure_cfg_param_types.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensure parameters are of the expected type — ensure_cfg_param_types","text":"NULL (invisibly).","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/ensure_cfg_param_types.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ensure parameters are of the expected type — ensure_cfg_param_types","text":"","code":"ensure_cfg_param_types()"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/ensure_sys_env_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensure the presence of required system environment variables — ensure_sys_env_vars","title":"Ensure the presence of required system environment variables — ensure_sys_env_vars","text":"Check presence required system environment variables abort found.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/ensure_sys_env_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensure the presence of required system environment variables — ensure_sys_env_vars","text":"","code":"ensure_sys_env_vars(varnames = NULL)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/ensure_sys_env_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensure the presence of required system environment variables — ensure_sys_env_vars","text":"varnames character vector variable names check user's environment.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/ensure_sys_env_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensure the presence of required system environment variables — ensure_sys_env_vars","text":"NULL (invisibly)","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/ensure_sys_env_vars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ensure the presence of required system environment variables — ensure_sys_env_vars","text":"","code":"if (FALSE) { # \\dontrun{ ensure_sys_env_vars() } # }"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/ensure_valid_env.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the validity of a specified 'environment' string — ensure_valid_env","title":"Check the validity of a specified 'environment' string — ensure_valid_env","text":"Check validity specified 'environment' string","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/ensure_valid_env.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the validity of a specified 'environment' string — ensure_valid_env","text":"","code":"ensure_valid_env(env, null_ok = NULL)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/ensure_valid_env.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the validity of a specified 'environment' string — ensure_valid_env","text":"env character string specifying environment get path. one 'main', 'ref' 'test'. null_ok Whether valid env NULL.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/ensure_valid_env.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the validity of a specified 'environment' string — ensure_valid_env","text":"NULL (invisibly)","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/ensure_valid_env.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check the validity of a specified 'environment' string — ensure_valid_env","text":"Valid environments data : main: Data produced running package code ref:  Reference data (historical data used regression testing) test: Test data","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/ensure_valid_env.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check the validity of a specified 'environment' string — ensure_valid_env","text":"","code":"ensure_valid_env(\"ref\") if (FALSE) { # \\dontrun{ ensure_valid_env(\"nonexistent\") # => Causes an error } # }"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/ensure_valid_phase.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the validity of a specified 'phase' string — ensure_valid_phase","title":"Check the validity of a specified 'phase' string — ensure_valid_phase","text":"Check validity specified 'phase' string","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/ensure_valid_phase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the validity of a specified 'phase' string — ensure_valid_phase","text":"","code":"ensure_valid_phase(phase, null_ok = NULL)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/ensure_valid_phase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the validity of a specified 'phase' string — ensure_valid_phase","text":"phase character string specifying phase. Valid options : raw, processed output null_ok Whether valid phase NULL.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/ensure_valid_phase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the validity of a specified 'phase' string — ensure_valid_phase","text":"NULL (invisibly)","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/ensure_valid_phase.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check the validity of a specified 'phase' string — ensure_valid_phase","text":"","code":"ensure_valid_phase(\"output\") if (FALSE) { # \\dontrun{ ensure_valid_phase(\"nonexistent\") # => Causes an error } # }"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/env_should_run_hl_data_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether to run a particular high-level data test — env_should_run_hl_data_test","title":"Check whether to run a particular high-level data test — env_should_run_hl_data_test","text":"Check whether run particular high-level data test","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/env_should_run_hl_data_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether to run a particular high-level data test — env_should_run_hl_data_test","text":"","code":"env_should_run_hl_data_test(env_var_id = NULL)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/env_should_run_hl_data_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether to run a particular high-level data test — env_should_run_hl_data_test","text":"env_var_id system environment variable specified whether run corresponding test.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/env_should_run_hl_data_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether to run a particular high-level data test — env_should_run_hl_data_test","text":"boolean: TRUE either specified test configured run high-level data tests configured run, otherwise FALSE.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/env_should_run_hl_data_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check whether to run a particular high-level data test — env_should_run_hl_data_test","text":"","code":"if (FALSE) { # \\dontrun{ env_should_run_hl_data_test() env_should_run_hl_data_test(\"DIMEX_RUN_HLDT_1D\") } # }"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/escape_txt.html","id":null,"dir":"Reference","previous_headings":"","what":"Escape special characters in the given string — escape_txt","title":"Escape special characters in the given string — escape_txt","text":"Given character string, ensure function regular expression escaping regex metacharacters appear string.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/escape_txt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Escape special characters in the given string — escape_txt","text":"","code":"escape_txt(txt)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/escape_txt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Escape special characters in the given string — escape_txt","text":"txt string escaped can function regular expression.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/escape_txt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Escape special characters in the given string — escape_txt","text":"given string regex metacharacters escaped.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/escape_txt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Escape special characters in the given string — escape_txt","text":"","code":"escape_txt(\".\") # => \"\\.\" #> [1] \"\\\\.\" escape_txt(\"ab[c]\") # => \"ab\\[c\\]\" #> [1] \"ab\\\\[c\\\\]\" escape_txt(\"$30\") # => \"\\$30\" #> [1] \"\\\\$30\""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/generate_cfg_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a config template containing default values — generate_cfg_template","title":"Create a config template containing default values — generate_cfg_template","text":"Create config template containing default values","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/generate_cfg_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a config template containing default values — generate_cfg_template","text":"","code":"generate_cfg_template()"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/generate_cfg_template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a config template containing default values — generate_cfg_template","text":"list lists containing required config keys values.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/generate_cfg_template.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a config template containing default values — generate_cfg_template","text":"TODO: Describe config format values","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/generate_cfg_template.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a config template containing default values — generate_cfg_template","text":"","code":"if (FALSE) { # \\dontrun{ generate_cfg_template() } # }"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_area_id_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a list of unique MSOA area id's, possibly subsetted — get_area_id_list","title":"Get a list of unique MSOA area id's, possibly subsetted — get_area_id_list","text":"Retrieve sorted list unique Middle layer Super Output Area id's, limited maximum msoa_lim provided.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_area_id_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a list of unique MSOA area id's, possibly subsetted — get_area_id_list","text":"","code":"get_area_id_list(area_ids, msoa_lim = NULL)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_area_id_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a list of unique MSOA area id's, possibly subsetted — get_area_id_list","text":"area_ids area id's character vector. msoa_lim maximum number area id's return, NA . Default: NA","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_area_id_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a list of unique MSOA area id's, possibly subsetted — get_area_id_list","text":"sorted unique area id's, limited msoa_lim supplied.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_area_id_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a list of unique MSOA area id's, possibly subsetted — get_area_id_list","text":"","code":"if (FALSE) { # \\dontrun{ pop_dat <- get_pop_dat() # Get the first 5 unique area id's get_area_id_list(pop_dat$area_id, 5) } # }"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_cfg.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a configuration to use for a run. — get_cfg","title":"Get a configuration to use for a run. — get_cfg","text":"Get configuration use run.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_cfg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a configuration to use for a run. — get_cfg","text":"","code":"get_cfg(cfg = NULL, overrides = NULL, cfg_dir = NULL, cfg_name = NULL)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_cfg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a configuration to use for a run. — get_cfg","text":"cfg list nested lists, 'leaf' nodes specifying configuration values. Default: template config returned generate_cfg_template() overrides list containing settings override defaults. See section Details information. cfg_dir character string specifying config directory, NULL default. Default: OS-specific path user configuration files user's home directory. cfg_name character string specifying config file name, NULL default. Default: 'config.yml'","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_cfg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a configuration to use for a run. — get_cfg","text":"list containing settings run, constructed defaults overridden config /overrides supplied. See section Details information.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_cfg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get a configuration to use for a run. — get_cfg","text":"cfg supplied, returned config unless overrides also supplied, case values overrides substituted within cfg. cfg overrides NULL returned config saved user config. cfg NULL overrides supplied, returned config saved user config values overrides overrides substituted.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_cfg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a configuration to use for a run. — get_cfg","text":"","code":"get_cfg() #> Warning: cannot open file '/home/runner/.config/R-dimex/config.yml': No such file or directory #> Error in file(file, \"rt\", encoding = fileEncoding): cannot open the connection get_cfg(overrides = list(run = list(seed_val = 200))) #> Warning: cannot open file '/home/runner/.config/R-dimex/config.yml': No such file or directory #> Error in file(file, \"rt\", encoding = fileEncoding): cannot open the connection"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_cfg_keys.html","id":null,"dir":"Reference","previous_headings":"","what":"Recursively list all keys in a config — get_cfg_keys","title":"Recursively list all keys in a config — get_cfg_keys","text":"Retrieve list hierarchical config keys, flattened single strings components hierarchy separated dot. arguments provided, function retrieves keys default config.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_cfg_keys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recursively list all keys in a config — get_cfg_keys","text":"","code":"get_cfg_keys(cfg_dir = NULL, cfg_name = NULL, cfg = NULL)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_cfg_keys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recursively list all keys in a config — get_cfg_keys","text":"cfg_dir character string specifying config directory, NULL default. Default: OS-specific path user configuration files user's home directory. cfg_name character string specifying config file name, NULL default. Default: 'config.yml' cfg list nested lists, 'leaf' nodes specifying configuration values. Default: template config returned generate_cfg_template()","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_cfg_keys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recursively list all keys in a config — get_cfg_keys","text":"character vector hierarchical keys, flattened single strings components hierarchy separated dot.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_cfg_keys.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recursively list all keys in a config — get_cfg_keys","text":"","code":"get_cfg_keys(cfg = generate_cfg_template()) #>  [1] \"run\"                                            #>  [2] \"run.msoa_lim\"                                   #>  [3] \"run.seed_val\"                                   #>  [4] \"store\"                                          #>  [5] \"store.dat\"                                      #>  [6] \"store.dat.interim\"                              #>  [7] \"store.dat.interim.dirs\"                         #>  [8] \"store.dat.interim.dirs.base\"                    #>  [9] \"store.dat.interim.fnames\"                       #> [10] \"store.dat.interim.fnames.imputed_tus_dat\"       #> [11] \"store.dat.raw\"                                  #> [12] \"store.dat.raw.dirs\"                             #> [13] \"store.dat.raw.dirs.base\"                        #> [14] \"store.dat.raw.dirs.misc\"                        #> [15] \"store.dat.raw.dirs.population\"                  #> [16] \"store.dat.raw.dirs.shapefiles\"                  #> [17] \"store.dat.raw.dirs.tus\"                         #> [18] \"store.dat.raw.misc\"                             #> [19] \"store.dat.raw.misc.nssec_class\"                 #> [20] \"store.dat.raw.misc.sic2007_class\"               #> [21] \"store.dat.raw.misc.soc2010_class\"               #> [22] \"store.dat.raw.nm_patterns\"                      #> [23] \"store.dat.raw.nm_patterns.pop_lad_tus\"          #> [24] \"store.dat.raw.shapefile_layers\"                 #> [25] \"store.dat.raw.shapefile_layers.ew_msoa\"         #> [26] \"store.dat.raw.shapefile_layers.uk_full\"         #> [27] \"store.dat.raw.tus\"                              #> [28] \"store.dat.raw.tus.uk_metadata_location\"         #> [29] \"store.dat.wrangled\"                             #> [30] \"store.dat.wrangled.dirs\"                        #> [31] \"store.dat.wrangled.dirs.base\"                   #> [32] \"store.dat.wrangled.dirs.population\"             #> [33] \"store.dat.wrangled.dirs.shapefiles\"             #> [34] \"store.dat.wrangled.dirs.tus\"                    #> [35] \"store.dat.wrangled.population\"                  #> [36] \"store.dat.wrangled.population.pop_dat\"          #> [37] \"store.dat.wrangled.population_ref\"              #> [38] \"store.dat.wrangled.population_ref.pop_dat\"      #> [39] \"store.dat.wrangled.shapefiles\"                  #> [40] \"store.dat.wrangled.shapefiles.ew_msoa\"          #> [41] \"store.dat.wrangled.shapefiles.ew_msoa_region\"   #> [42] \"store.dat.wrangled.shapefiles.uk_full\"          #> [43] \"store.dat.wrangled.shapefiles_ref\"              #> [44] \"store.dat.wrangled.shapefiles_ref.msoa\"         #> [45] \"store.dat.wrangled.time_use_survey\"             #> [46] \"store.dat.wrangled.time_use_survey.tus_dat\"     #> [47] \"store.dat.wrangled.time_use_survey_ref\"         #> [48] \"store.dat.wrangled.time_use_survey_ref.tus_dat\" #> [49] \"store.out\"                                      #> [50] \"store.out.dirs\"                                 #> [51] \"store.out.dirs.activities\"                      #> [52] \"store.out.dirs.base\"                            #> [53] \"store.out.nm_patterns\"                          #> [54] \"store.out.nm_patterns.activities\"               #> [55] \"store.save\"                                     #> [56] \"store.save.imputed_tus_dat\""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_cfg_pkg_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the package identifier for creating the user config path — get_cfg_pkg_id","title":"Get the package identifier for creating the user config path — get_cfg_pkg_id","text":"Retrieve identifier use directory name creating package config. See section Details information.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_cfg_pkg_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the package identifier for creating the user config path — get_cfg_pkg_id","text":"","code":"get_cfg_pkg_id()"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_cfg_pkg_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the package identifier for creating the user config path — get_cfg_pkg_id","text":"character string: package identifier configuration purposes.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_cfg_pkg_id.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the package identifier for creating the user config path — get_cfg_pkg_id","text":"path OS-specific location storing user configuration files user's home directory. created according user's operating system guidelines follows: | Windows:  | C:/Users/Username/AppData/Local/R-dimex | | Linux:    | ~/.config/R-dimex                       | | macOS:    | ~/Library/Application Support/R-dimex   |","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_cfg_pkg_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the package identifier for creating the user config path — get_cfg_pkg_id","text":"","code":"get_cfg_pkg_id #> function ()  #> { #>     \"R-dimex\" #> } #> <bytecode: 0x562e5894f250> #> <environment: namespace:dimex>"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_cfg_template_keys.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve a character vector of expected config keys — get_cfg_template_keys","title":"Retrieve a character vector of expected config keys — get_cfg_template_keys","text":"Retrieve character vector expected config keys","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_cfg_template_keys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve a character vector of expected config keys — get_cfg_template_keys","text":"","code":"get_cfg_template_keys()"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_cfg_template_keys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve a character vector of expected config keys — get_cfg_template_keys","text":"character vector expected config keys.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_cfg_template_keys.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve a character vector of expected config keys — get_cfg_template_keys","text":"returned keys returned get_cfg_keys(cfg = generate_cfg_template()).","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_cfg_template_keys.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve a character vector of expected config keys — get_cfg_template_keys","text":"","code":"get_cfg_template_keys() #>  [1] \"run\"                                            #>  [2] \"run.msoa_lim\"                                   #>  [3] \"run.seed_val\"                                   #>  [4] \"store\"                                          #>  [5] \"store.dat\"                                      #>  [6] \"store.dat.interim\"                              #>  [7] \"store.dat.interim.dirs\"                         #>  [8] \"store.dat.interim.dirs.base\"                    #>  [9] \"store.dat.interim.fnames\"                       #> [10] \"store.dat.interim.fnames.imputed_tus_dat\"       #> [11] \"store.dat.raw\"                                  #> [12] \"store.dat.raw.dirs\"                             #> [13] \"store.dat.raw.dirs.base\"                        #> [14] \"store.dat.raw.dirs.misc\"                        #> [15] \"store.dat.raw.dirs.population\"                  #> [16] \"store.dat.raw.dirs.shapefiles\"                  #> [17] \"store.dat.raw.dirs.tus\"                         #> [18] \"store.dat.raw.misc\"                             #> [19] \"store.dat.raw.misc.nssec_class\"                 #> [20] \"store.dat.raw.misc.sic2007_class\"               #> [21] \"store.dat.raw.misc.soc2010_class\"               #> [22] \"store.dat.raw.nm_patterns\"                      #> [23] \"store.dat.raw.nm_patterns.pop_lad_tus\"          #> [24] \"store.dat.raw.shapefile_layers\"                 #> [25] \"store.dat.raw.shapefile_layers.ew_msoa\"         #> [26] \"store.dat.raw.shapefile_layers.uk_full\"         #> [27] \"store.dat.raw.tus\"                              #> [28] \"store.dat.raw.tus.uk_metadata_location\"         #> [29] \"store.dat.wrangled\"                             #> [30] \"store.dat.wrangled.dirs\"                        #> [31] \"store.dat.wrangled.dirs.base\"                   #> [32] \"store.dat.wrangled.dirs.population\"             #> [33] \"store.dat.wrangled.dirs.shapefiles\"             #> [34] \"store.dat.wrangled.dirs.tus\"                    #> [35] \"store.dat.wrangled.population\"                  #> [36] \"store.dat.wrangled.population.pop_dat\"          #> [37] \"store.dat.wrangled.population_ref\"              #> [38] \"store.dat.wrangled.population_ref.pop_dat\"      #> [39] \"store.dat.wrangled.shapefiles\"                  #> [40] \"store.dat.wrangled.shapefiles.ew_msoa\"          #> [41] \"store.dat.wrangled.shapefiles.ew_msoa_region\"   #> [42] \"store.dat.wrangled.shapefiles.uk_full\"          #> [43] \"store.dat.wrangled.shapefiles_ref\"              #> [44] \"store.dat.wrangled.shapefiles_ref.msoa\"         #> [45] \"store.dat.wrangled.time_use_survey\"             #> [46] \"store.dat.wrangled.time_use_survey.tus_dat\"     #> [47] \"store.dat.wrangled.time_use_survey_ref\"         #> [48] \"store.dat.wrangled.time_use_survey_ref.tus_dat\" #> [49] \"store.out\"                                      #> [50] \"store.out.dirs\"                                 #> [51] \"store.out.dirs.activities\"                      #> [52] \"store.out.dirs.base\"                            #> [53] \"store.out.nm_patterns\"                          #> [54] \"store.out.nm_patterns.activities\"               #> [55] \"store.save\"                                     #> [56] \"store.save.imputed_tus_dat\""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_cfg_template_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the config template file name — get_cfg_template_name","title":"Retrieve the config template file name — get_cfg_template_name","text":"Retrieve config template file name","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_cfg_template_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the config template file name — get_cfg_template_name","text":"","code":"get_cfg_template_name(cfg_template_name = NULL)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_cfg_template_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the config template file name — get_cfg_template_name","text":"cfg_template_name character string specifying template config file name, NULL default. Default: 'config-template.yml'","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_cfg_template_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the config template file name — get_cfg_template_name","text":"character string: supplied config template name default config template name none provided.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_cfg_template_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve the config template file name — get_cfg_template_name","text":"","code":"get_cfg_template_name() #> [1] \"config-template.yml\" get_cfg_template_name(\"conftemplate.yml\") #> [1] \"conftemplate.yml\""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_cfg_template_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the config template path — get_cfg_template_path","title":"Retrieve the config template path — get_cfg_template_path","text":"Retrieve config template path","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_cfg_template_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the config template path — get_cfg_template_path","text":"","code":"get_cfg_template_path(template_dir_name = NULL, template_name = NULL)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_cfg_template_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the config template path — get_cfg_template_path","text":"template_dir_name character string: name config template sub-directory NULL default. Default: 'config' template_name character string: name config template file NULL default. Default: name returned get_cfg_template_name()","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_cfg_template_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the config template path — get_cfg_template_path","text":"character string: path config template file.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_cfg_template_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve the config template path — get_cfg_template_path","text":"","code":"get_cfg_template_path() #> [1] \"/home/runner/work/_temp/Library/dimex/config/config-template.yml\" if (FALSE) { # \\dontrun{ get_cfg_template_path(\"cfg\") get_cfg_template_path(template_name = \"cfg-file.yml\") get_cfg_template_path(\"cfg\", \"cfg-file.yml\") } # }"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_cfg_val.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a config value from the config — get_cfg_val","title":"Get a config value from the config — get_cfg_val","text":"Retrieve config value user config supplied config.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_cfg_val.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a config value from the config — get_cfg_val","text":"","code":"get_cfg_val(key, cfg_dir = NULL, cfg_name = NULL, cfg = NULL)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_cfg_val.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a config value from the config — get_cfg_val","text":"key single character string hierarchical keys look flattened separating level hierarchy dot. cfg_dir character string specifying config directory, NULL default. Default: OS-specific path user configuration files user's home directory. cfg_name character string specifying config file name, NULL default. Default: 'config.yml' cfg list nested lists, 'leaf' nodes specifying configuration values. Default: template config returned generate_cfg_template()","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_cfg_val.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a config value from the config — get_cfg_val","text":"list requested value retrieved config. key specification corresponds 'leaf' entry, returned list length 1; corresponds list, returned list length > 1.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_cfg_val.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a config value from the config — get_cfg_val","text":"","code":"# This is not a 'leaf' entry so returns a list of length > 1 x <- get_cfg_val(\"store.dat.raw\", cfg = generate_cfg_template())  # This is a 'leaf' entry so returns a list of length 1 (character) x <- get_cfg_val(\"store.dat.raw.dirs.base\", cfg = generate_cfg_template())"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_cfg_val_msoa.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the MSOA value from the config — get_cfg_val_msoa","title":"Get the MSOA value from the config — get_cfg_val_msoa","text":"Get MSOA value config","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_cfg_val_msoa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the MSOA value from the config — get_cfg_val_msoa","text":"","code":"get_cfg_val_msoa(key = NULL, cfg_dir = NULL, cfg_name = NULL, cfg = NULL)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_cfg_val_msoa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the MSOA value from the config — get_cfg_val_msoa","text":"key single character string hierarchical keys look flattened separating level hierarchy dot. cfg_dir character string specifying config directory, NULL default. Default: OS-specific path user configuration files user's home directory. cfg_name character string specifying config file name, NULL default. Default: 'config.yml' cfg list nested lists, 'leaf' nodes specifying configuration values. Default: template config returned generate_cfg_template()","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_cfg_val_msoa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the MSOA value from the config — get_cfg_val_msoa","text":"integer: configured MSOA value either number specified, , value NA, total number MSOAs given population data file.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_cfg_val_msoa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the MSOA value from the config — get_cfg_val_msoa","text":"","code":"get_cfg_val_msoa(cfg = generate_cfg_template()) #> [1] 2"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_dat_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a path value from the configuration — get_dat_path","title":"Get a path value from the configuration — get_dat_path","text":"Get path value configuration","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_dat_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a path value from the configuration — get_dat_path","text":"","code":"get_dat_path(   dat_keys,   env = NULL,   cfg_dir = NULL,   cfg_name = NULL,   cfg = NULL,   sys_env_vars = NULL )"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_dat_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a path value from the configuration — get_dat_path","text":"dat_keys character vector element key format expected get_cfg_val(). single character strings hierarchical keys look (level hierarchy separated dot). env character string specifying environment get path. one 'main', 'ref' 'test'. cfg_dir character string specifying config directory, NULL default. Default: OS-specific path user configuration files user's home directory. cfg_name character string specifying config file name, NULL default. Default: 'config.yml' cfg list nested lists, 'leaf' nodes specifying configuration values. Default: template config returned generate_cfg_template() sys_env_vars named character vector required system environment variables names package environments relate . Note package environments, e.g. 'main' 'ref', provide runtime information using package confused system environment (specifies user-specific variables).","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_dat_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a path value from the configuration — get_dat_path","text":"character string: requested path, retrieved default config given config, provided.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_dat_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a path value from the configuration — get_dat_path","text":"","code":"get_dat_path(\"store.dat.wrangled.dirs.base\", cfg = generate_cfg_template()) #> Error in ensure_sys_env_vars(unname(sys_env_vars)): 2 required system environment vars are not set #> ℹ You need a '.Renviron' file for this #> ℹ (e.g. set VAR_NAME=<value> in .Renviron for each variable). #> ℹ Not found in system environment: #> ℹ  1. DIMEX_STORE #> ℹ  2. DIMEX_STORE_REF  cfg <- get_cfg_val(\"store.dat.raw\", cfg = generate_cfg_template()) dat_keys <- c(\"dirs.base\", \"dirs.shapefiles\") get_dat_path(dat_keys, \"ref\", cfg = cfg) #> Error in ensure_sys_env_vars(unname(sys_env_vars)): 2 required system environment vars are not set #> ℹ You need a '.Renviron' file for this #> ℹ (e.g. set VAR_NAME=<value> in .Renviron for each variable). #> ℹ Not found in system environment: #> ℹ  1. DIMEX_STORE #> ℹ  2. DIMEX_STORE_REF"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_grouping_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Get grouping variables for the time use survey data — get_grouping_vars","title":"Get grouping variables for the time use survey data — get_grouping_vars","text":"Get grouping variables time use survey data","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_grouping_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get grouping variables for the time use survey data — get_grouping_vars","text":"","code":"get_grouping_vars(strata = NULL)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_grouping_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get grouping variables for the time use survey data — get_grouping_vars","text":"strata optional character vector containing names stratification variables. supplied, added activity location variables used grouping. Default: none.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_grouping_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get grouping variables for the time use survey data — get_grouping_vars","text":"character vector names grouping variables. 'activity' 'location' together stratification variables (supplied).","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_grouping_vars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get grouping variables for the time use survey data — get_grouping_vars","text":"","code":"get_grouping_vars() #> [1] \"activity\" \"location\" get_grouping_vars(c(\"sex\", \"agegr4\", \"nssec5\", \"daytype\")) #> [1] \"sex\"      \"agegr4\"   \"nssec5\"   \"daytype\"  \"activity\" \"location\""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_invalid_cfg_keys.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve any invalid keys from a config — get_invalid_cfg_keys","title":"Retrieve any invalid keys from a config — get_invalid_cfg_keys","text":"Identifies keys config exist exp_keys.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_invalid_cfg_keys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve any invalid keys from a config — get_invalid_cfg_keys","text":"","code":"get_invalid_cfg_keys(   exp_keys = NULL,   cfg_dir = NULL,   cfg_name = NULL,   cfg = NULL )"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_invalid_cfg_keys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve any invalid keys from a config — get_invalid_cfg_keys","text":"exp_keys character vector expected config keys NULL default. Default: Keys returned get_cfg_template_keys() cfg_dir character string specifying config directory, NULL default. Default: OS-specific path user configuration files user's home directory. cfg_name character string specifying config file name, NULL default. Default: 'config.yml' cfg list nested lists, 'leaf' nodes specifying configuration values. Default: template config returned generate_cfg_template()","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_invalid_cfg_keys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve any invalid keys from a config — get_invalid_cfg_keys","text":"character vector containing invalid keys found config.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_invalid_cfg_keys.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve any invalid keys from a config — get_invalid_cfg_keys","text":"","code":"get_invalid_cfg_keys() #> Warning: cannot open file '/home/runner/.config/R-dimex/config.yml': No such file or directory #> Error in file(file, \"rt\", encoding = fileEncoding): cannot open the connection"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_most_popular_locn.html","id":null,"dir":"Reference","previous_headings":"","what":"Get most popular location for each activity — get_most_popular_locn","title":"Get most popular location for each activity — get_most_popular_locn","text":"Get popular location activity, possibly stratification.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_most_popular_locn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get most popular location for each activity — get_most_popular_locn","text":"","code":"get_most_popular_locn(tus_dat, col_nm, missing_ids, strata = NULL)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_most_popular_locn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get most popular location for each activity — get_most_popular_locn","text":"tus_dat data frame time use survey data. expected format saved run_data_prep_tus(). col_nm character string: name new column create hold popular location activity (possibly strata). missing_ids integer vector numeric id's indicate missing locations. strata optional character vector containing names stratification variables. supplied, added activity location variables used grouping. Default: none.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_most_popular_locn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get most popular location for each activity — get_most_popular_locn","text":"summarised time use survey data 'popular' location added rows filtered include one line combination strata activity. multiple locations matching maximum proportion time spent location stratum activity first location id chosen.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_most_popular_locn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get most popular location for each activity — get_most_popular_locn","text":"","code":"if (FALSE) { # \\dontrun{ tus_dat <- get_tus_dat() missing_ids <- c(-9, 0, 10, 90) strata <- c(\"sex\", \"agegr4\", \"nssec5\", \"daytype\") get_most_popular_locn(tus_dat, \"most_popular_locn\", missing_ids, strata) } # }"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_path_components.html","id":null,"dir":"Reference","previous_headings":"","what":"Get path components from a path specification — get_path_components","title":"Get path components from a path specification — get_path_components","text":"Split path components platform-independent way. components can used reconstructing path different platform.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_path_components.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get path components from a path specification — get_path_components","text":"","code":"get_path_components(path)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_path_components.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get path components from a path specification — get_path_components","text":"path path separate components. can unix-style windows-style separators.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_path_components.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get path components from a path specification — get_path_components","text":"character vector path components given path.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_path_components.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get path components from a path specification — get_path_components","text":"","code":"linux_path_1 <- \"/path/to-somewhere/else\" linux_path_2 <- \"path/to somewhere/else\" linux_path_3 <- \"/path/to somewhere/else\" windows_path_1 <- \"C:\\\\Path\\\\to somewhere\\\\else\" windows_path_2 <- \"Path\\\\to somewhere\\\\else\""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_pkg_cfg_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the package config directory — get_pkg_cfg_dir","title":"Get the package config directory — get_pkg_cfg_dir","text":"Retrieve package config directory directory storing config template. pre-existing user config, template gets copied user config write_user_cfg().","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_pkg_cfg_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the package config directory — get_pkg_cfg_dir","text":"","code":"get_pkg_cfg_dir(template_dir_name = NULL)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_pkg_cfg_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the package config directory — get_pkg_cfg_dir","text":"template_dir_name character string: name config template sub-directory NULL default. Default: 'config'","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_pkg_cfg_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the package config directory — get_pkg_cfg_dir","text":"character string: path package config template directory.","code":""},{"path":[]},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_pkg_cfg_dir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the package config directory — get_pkg_cfg_dir","text":"","code":"get_pkg_cfg_dir() #> [1] \"/home/runner/work/_temp/Library/dimex/config\" if (FALSE) { # \\dontrun{ get_pkg_cfg_dir(\"cfg\") } # }"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_pop_dat.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the wrangled population data — get_pop_dat","title":"Get the wrangled population data — get_pop_dat","text":"Get wrangled population data","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_pop_dat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the wrangled population data — get_pop_dat","text":"","code":"get_pop_dat(env = NULL, cfg_dir = NULL, cfg_name = NULL, cfg = NULL)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_pop_dat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the wrangled population data — get_pop_dat","text":"env character string specifying environment get path. one 'main', 'ref' 'test'. cfg_dir character string specifying config directory, NULL default. Default: OS-specific path user configuration files user's home directory. cfg_name character string specifying config file name, NULL default. Default: 'config.yml' cfg list nested lists, 'leaf' nodes specifying configuration values. Default: template config returned generate_cfg_template()","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_pop_dat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the wrangled population data — get_pop_dat","text":"data.frame containing population data. See data.frame().","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_pop_dat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the wrangled population data — get_pop_dat","text":"","code":"if (FALSE) { # \\dontrun{ get_pop_dat() } # }"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_req_sys_env_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve names of the required system environment variables — get_req_sys_env_vars","title":"Retrieve names of the required system environment variables — get_req_sys_env_vars","text":"Retrieve names required system environment variables","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_req_sys_env_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve names of the required system environment variables — get_req_sys_env_vars","text":"","code":"get_req_sys_env_vars()"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_req_sys_env_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve names of the required system environment variables — get_req_sys_env_vars","text":"named character vector required system environment variables names package environments relate . Note package environments (e.g. 'main' 'ref') provide runtime information using package confused system environment specifies user-specific variables.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_req_sys_env_vars.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve names of the required system environment variables — get_req_sys_env_vars","text":"TODO: Add details sys env vars: DIMEX_STORE DIMEX_STORE_REF","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_req_sys_env_vars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve names of the required system environment variables — get_req_sys_env_vars","text":"","code":"get_req_sys_env_vars() #>              main               ref  #>     \"DIMEX_STORE\" \"DIMEX_STORE_REF\""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_root.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the root path for an environment — get_root","title":"Get the root path for an environment — get_root","text":"Retrieve root (base) path given environment.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_root.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the root path for an environment — get_root","text":"","code":"get_root(env = NULL, sys_env_vars = NULL)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_root.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the root path for an environment — get_root","text":"env character string specifying environment get path. one 'main', 'ref' 'test'. sys_env_vars named character vector required system environment variables names package environments relate . Note package environments, e.g. 'main' 'ref', provide runtime information using package confused system environment (specifies user-specific variables).","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_root.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the root path for an environment — get_root","text":"character string: root path given environment.","code":""},{"path":[]},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_root.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the root path for an environment — get_root","text":"","code":"if (FALSE) { # \\dontrun{ get_root() get_root(\"main\") get_root(\"ref\") } # }"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_stratified_samp.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a small stratified sample from the given data — get_stratified_samp","title":"Create a small stratified sample from the given data — get_stratified_samp","text":"Create small stratified sample given data","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_stratified_samp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a small stratified sample from the given data — get_stratified_samp","text":"","code":"get_stratified_samp(   .data,   strata,   n_per_stratum = NULL,   replace = NULL,   seed_val = NULL )"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_stratified_samp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a small stratified sample from the given data — get_stratified_samp","text":".data data frame data frame extension (e.g. tibble). strata character vector variables (column names) stratify. n_per_stratum Sample size per stratum. Default: 3 replace boolean: whether sample replacement . Default: FALSE seed_val integer setting RNG seed. Default: 123","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_stratified_samp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a small stratified sample from the given data — get_stratified_samp","text":"stratified sample created given data frame.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_stratified_samp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a small stratified sample from the given data — get_stratified_samp","text":"","code":"df <- data.frame(   group = rep(c(\"A\", \"B\", \"C\"), each = 4),   subgroup = rep(c(\"X\", \"Y\"), times = 6),   value = 1:24 ) df %>% get_stratified_samp(c(\"group\", \"subgroup\"), n_per_stratum = 2) #> # A tibble: 12 × 3 #>    group subgroup value #>    <chr> <chr>    <int> #>  1 A     X            1 #>  2 A     X           13 #>  3 A     Y           16 #>  4 A     Y           14 #>  5 B     X            5 #>  6 B     X            7 #>  7 B     Y           18 #>  8 B     Y           20 #>  9 C     X           21 #> 10 C     X           11 #> 11 C     Y           10 #> 12 C     Y           24  if (FALSE) { # \\dontrun{ get_tus_dat() %>% get_stratified_samp() } # }"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_test_cfg.html","id":null,"dir":"Reference","previous_headings":"","what":"Test helper to create a test config — get_test_cfg","title":"Test helper to create a test config — get_test_cfg","text":"Test helper create test config","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_test_cfg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test helper to create a test config — get_test_cfg","text":"","code":"get_test_cfg()"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_test_cfg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test helper to create a test config — get_test_cfg","text":"list conforms package config structure","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_test_cfg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test helper to create a test config — get_test_cfg","text":"","code":"if (FALSE) { # \\dontrun{ get_test_cfg() } # }"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_test_cfg_exp_keys.html","id":null,"dir":"Reference","previous_headings":"","what":"Test helper to return expected keys for the test config — get_test_cfg_exp_keys","title":"Test helper to return expected keys for the test config — get_test_cfg_exp_keys","text":"Test helper return expected keys test config","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_test_cfg_exp_keys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test helper to return expected keys for the test config — get_test_cfg_exp_keys","text":"","code":"get_test_cfg_exp_keys()"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_test_cfg_exp_keys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test helper to return expected keys for the test config — get_test_cfg_exp_keys","text":"character vector: expected keys test config","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_test_cfg_exp_keys.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test helper to return expected keys for the test config — get_test_cfg_exp_keys","text":"","code":"if (FALSE) { # \\dontrun{ get_test_cfg_exp_keys() } # }"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_tus_dat.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the wrangled time use survey data — get_tus_dat","title":"Get the wrangled time use survey data — get_tus_dat","text":"Get wrangled time use survey data","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_tus_dat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the wrangled time use survey data — get_tus_dat","text":"","code":"get_tus_dat(env = NULL, cfg_dir = NULL, cfg_name = NULL, cfg = NULL)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_tus_dat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the wrangled time use survey data — get_tus_dat","text":"env character string specifying environment get path. one 'main', 'ref' 'test'. cfg_dir character string specifying config directory, NULL default. Default: OS-specific path user configuration files user's home directory. cfg_name character string specifying config file name, NULL default. Default: 'config.yml' cfg list nested lists, 'leaf' nodes specifying configuration values. Default: template config returned generate_cfg_template()","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_tus_dat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the wrangled time use survey data — get_tus_dat","text":"data.frame containing time use survey data. See data.frame().","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_tus_dat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the wrangled time use survey data — get_tus_dat","text":"","code":"if (FALSE) { # \\dontrun{ get_tus_dat() } # }"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_user_cfg_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the user-specific config dir — get_user_cfg_dir","title":"Retrieve the user-specific config dir — get_user_cfg_dir","text":"Retrieve user-specific config dir","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_user_cfg_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the user-specific config dir — get_user_cfg_dir","text":"","code":"get_user_cfg_dir(cfg_dir = NULL)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_user_cfg_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the user-specific config dir — get_user_cfg_dir","text":"cfg_dir character string specifying config directory, NULL default. Default: OS-specific path user configuration files user's home directory.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_user_cfg_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the user-specific config dir — get_user_cfg_dir","text":"character string: supplied config dir default config dir none provided.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_user_cfg_dir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve the user-specific config dir — get_user_cfg_dir","text":"","code":"get_user_cfg_dir() #> [1] \"/home/runner/.config/R-dimex\" get_user_cfg_dir(file.path(\"config\")) #> [1] \"config\""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_user_cfg_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the user-specific config file name — get_user_cfg_name","title":"Retrieve the user-specific config file name — get_user_cfg_name","text":"Retrieve user-specific config file name","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_user_cfg_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the user-specific config file name — get_user_cfg_name","text":"","code":"get_user_cfg_name(cfg_name = NULL)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_user_cfg_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the user-specific config file name — get_user_cfg_name","text":"cfg_name character string specifying config file name, NULL default. Default: 'config.yml'","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_user_cfg_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the user-specific config file name — get_user_cfg_name","text":"character string: supplied config name default config name none provided.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_user_cfg_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve the user-specific config file name — get_user_cfg_name","text":"","code":"get_user_cfg_name() #> [1] \"config.yml\" get_user_cfg_name(\"conf.yml\") #> [1] \"conf.yml\""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_user_cfg_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the config file path — get_user_cfg_path","title":"Retrieve the config file path — get_user_cfg_path","text":"Retrieve config file path","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_user_cfg_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the config file path — get_user_cfg_path","text":"","code":"get_user_cfg_path(cfg_dir = NULL, cfg_name = NULL)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_user_cfg_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the config file path — get_user_cfg_path","text":"cfg_dir character string specifying config directory, NULL default. Default: OS-specific path user configuration files user's home directory. cfg_name character string specifying config file name, NULL default. Default: 'config.yml'","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_user_cfg_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the config file path — get_user_cfg_path","text":"character string: path config file, constructed cfg_dir cfg_name defaults suplied.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/get_user_cfg_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve the config file path — get_user_cfg_path","text":"","code":"get_user_cfg_path() #> [1] \"/home/runner/.config/R-dimex/config.yml\" get_user_cfg_path(file.path(\"conf\"), \"configuration.yml\") #> [1] \"conf/configuration.yml\""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/grapes-notin-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Establish whether particular values exist in a vector. — %notin%","title":"Establish whether particular values exist in a vector. — %notin%","text":"negation %% operator.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/grapes-notin-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Establish whether particular values exist in a vector. — %notin%","text":"","code":"x %notin% y"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/grapes-notin-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Establish whether particular values exist in a vector. — %notin%","text":"x vector NULL: values matched. y vector NULL: values checked match.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/grapes-notin-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Establish whether particular values exist in a vector. — %notin%","text":"logical vector, indicating match located element x (.e., values TRUE FALSE).","code":""},{"path":[]},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/grapes-notin-grapes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Establish whether particular values exist in a vector. — %notin%","text":"","code":"\"a\" %notin% c(\"b\", \"c\") #> [1] TRUE"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/impute_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"Impute missing location data — impute_missing","title":"Impute missing location data — impute_missing","text":"Impute missing location data","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/impute_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Impute missing location data — impute_missing","text":"","code":"impute_missing(.data, tus_dat, col_nm, missing_ids, strata = NULL)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/impute_missing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Impute missing location data — impute_missing","text":".data data frame data frame extension (e.g. tibble). tus_dat data frame time use survey data. expected format saved run_data_prep_tus(). col_nm character string: name new column create hold popular location activity (possibly strata). missing_ids integer vector numeric id's indicate missing locations. strata optional character vector containing names stratification variables. supplied, added activity location variables used grouping. Default: none.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/impute_missing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Impute missing location data — impute_missing","text":"supplied tus_dat data frame imputed data missing locations. Imputed values computed popular location activity (optional) strata.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/impute_missing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Impute missing location data — impute_missing","text":"","code":"if (FALSE) { # \\dontrun{ tus_dat <- get_tus_dat() strata <- c(\"sex\", \"agegr4\", \"nssec5\", \"daytype\") impute_missing(tus_dat, tus_dat, \"most_popular_locn\", missing_ids, strata) } # }"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/impute_tus_dat.html","id":null,"dir":"Reference","previous_headings":"","what":"Impute missing tus data — impute_tus_dat","title":"Impute missing tus data — impute_tus_dat","text":"Impute missing tus data","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/impute_tus_dat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Impute missing tus data — impute_tus_dat","text":"","code":"impute_tus_dat(env = NULL, cfg_dir = NULL, cfg_name = NULL, cfg = NULL)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/impute_tus_dat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Impute missing tus data — impute_tus_dat","text":"env character string specifying environment get path. one 'main', 'ref' 'test'. cfg_dir character string specifying config directory, NULL default. Default: OS-specific path user configuration files user's home directory. cfg_name character string specifying config file name, NULL default. Default: 'config.yml' cfg list nested lists, 'leaf' nodes specifying configuration values. Default: template config returned generate_cfg_template()","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/impute_tus_dat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Impute missing tus data — impute_tus_dat","text":"data frame imputed tus data.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/impute_tus_dat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Impute missing tus data — impute_tus_dat","text":"","code":"if (FALSE) { # \\dontrun{ # To override the config to save the imputed tus data: overrides = list(store = list(save = list(imputed_tus_dat = TRUE))) impute_tus_dat(cfg = get_cfg(overrides = overrides)) } # }"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/is_int_val.html","id":null,"dir":"Reference","previous_headings":"","what":"Tests if a value is an integer. — is_int_val","title":"Tests if a value is an integer. — is_int_val","text":"Tests value integer.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/is_int_val.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tests if a value is an integer. — is_int_val","text":"","code":"is_int_val(x)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/is_int_val.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tests if a value is an integer. — is_int_val","text":"x value test.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/is_int_val.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tests if a value is an integer. — is_int_val","text":"TRUE value number decimal value, FALSE otherwise.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/is_int_val.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tests if a value is an integer. — is_int_val","text":"","code":"is_int_val(\"5\")     # => FALSE #> [1] FALSE is_int_val(10)      # => TRUE #> [1] TRUE is_int_val(16.5)    # => FALSE #> [1] FALSE is_int_val(\"apple\") # => FALSE #> [1] FALSE is_int_val(-1)      # => TRUE #> [1] TRUE"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/is_r_cmd_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if R CMD CHECK is currently running — is_r_cmd_check","title":"Check if R CMD CHECK is currently running — is_r_cmd_check","text":"Check R CMD CHECK currently running","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/is_r_cmd_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if R CMD CHECK is currently running — is_r_cmd_check","text":"","code":"is_r_cmd_check()"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/is_r_cmd_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if R CMD CHECK is currently running — is_r_cmd_check","text":"boolean: TRUE system environment variable 'R_CHECK_PACKAGE_NAME' non-empty (indicate 'R CMD CHECK' currently running), otherwise FALSE.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/is_r_cmd_check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if R CMD CHECK is currently running — is_r_cmd_check","text":"","code":"if (FALSE) { # \\dontrun{ is_r_cmd_check() } # }"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/is_strict_vec.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an object is a vector — is_strict_vec","title":"Check if an object is a vector — is_strict_vec","text":"Check object vector","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/is_strict_vec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an object is a vector — is_strict_vec","text":"","code":"is_strict_vec(x, null_ok = NULL)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/is_strict_vec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an object is a vector — is_strict_vec","text":"x object check. null_ok boolean indicating whether NULL value x acceptable. Default: FALSE","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/is_strict_vec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if an object is a vector — is_strict_vec","text":"null_ok TRUE, returns TRUE x NULL x vector, otherwise returns FALSE; null_ok FALSE, throws error x NULL returns TRUE x vector, otherwise returns FALSE.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/is_strict_vec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if an object is a vector — is_strict_vec","text":"","code":"is_strict_vec(c(10, 20, 30)) # => TRUE #> [1] TRUE is_strict_vec(list(10, 20, 30)) # => FALSE #> [1] FALSE"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/local_mk_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Test helper to create a temporary directory — local_mk_dir","title":"Test helper to create a temporary directory — local_mk_dir","text":"Test helper create temporary directory","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/local_mk_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test helper to create a temporary directory — local_mk_dir","text":"","code":"local_mk_dir(   dir = fs::file_temp(pattern = \"R-dimex-tst-dir_\"),   envir = parent.frame() )"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/local_mk_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test helper to create a temporary directory — local_mk_dir","text":"dir temporary directory character string returned fs::file_temp(). envir environment use scoping must default parent.frame() - changed supplying alternative used withr::defer().","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/local_mk_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test helper to create a temporary directory — local_mk_dir","text":"name temporary directory character string (fs_path object).","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/local_mk_dir.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Test helper to create a temporary directory — local_mk_dir","text":"Test fixtures testthat","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/local_mk_dir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test helper to create a temporary directory — local_mk_dir","text":"","code":"if (FALSE) { # \\dontrun{ tmp_dir <- local_mk_dir() } # }"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/local_sys_env_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Test helper to temporarily set sys env vars — local_sys_env_vars","title":"Test helper to temporarily set sys env vars — local_sys_env_vars","text":"Test helper temporarily set sys env vars","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/local_sys_env_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test helper to temporarily set sys env vars — local_sys_env_vars","text":"","code":"local_sys_env_vars(vars, envir = parent.frame())"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/local_sys_env_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test helper to temporarily set sys env vars — local_sys_env_vars","text":"vars named character vector names corresponding vars temporarily changed values changed . envir environment use scoping must default parent.frame() - changed supplying alternative used withr::defer().","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/local_sys_env_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test helper to temporarily set sys env vars — local_sys_env_vars","text":"NULL (invisibly)","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/local_sys_env_vars.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Test helper to temporarily set sys env vars — local_sys_env_vars","text":"call local_sys_env_vars() alter value specified system environment variables set deferred event set back original values calling function exits (.e., within appropriate scope controlled envir argument).","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/local_sys_env_vars.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Test helper to temporarily set sys env vars — local_sys_env_vars","text":"Test fixtures testthat","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/local_sys_env_vars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test helper to temporarily set sys env vars — local_sys_env_vars","text":"","code":"if (FALSE) { # \\dontrun{ # For interactive use: local_sys_env_vars(c(DIMEX_STORE = \"xxx\", DIMEX_STORE_REF = \"yyy\")) # Run the deferred events to set the sys env vars back to their original # values: withr::deferred_run() # Note: Use `withr::deferred_clear()` to clear the events without running } # }"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/local_write_cfg.html","id":null,"dir":"Reference","previous_headings":"","what":"Test helper to write a test config to file — local_write_cfg","title":"Test helper to write a test config to file — local_write_cfg","text":"Test helper write test config file","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/local_write_cfg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test helper to write a test config to file — local_write_cfg","text":"","code":"local_write_cfg(   cfg_name = \"tmp_cfg.yml\",   dir = fs::file_temp(pattern = \"R-dimex-tst-cfg_\"),   envir = parent.frame() )"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/local_write_cfg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test helper to write a test config to file — local_write_cfg","text":"cfg_name character string: name config file write. dir temporary directory character string returned fs::file_temp(). envir environment use scoping must default parent.frame() - changed supplying alternative used withr::defer().","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/local_write_cfg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test helper to write a test config to file — local_write_cfg","text":"name temporary directory contains saved config file character string (fs_path object).","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/local_write_cfg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Test helper to write a test config to file — local_write_cfg","text":"call local_write_cfg() write config file temporary directory set deferred event delete directory (file) calling function exits (.e., within appropriate scope controlled envir argument).","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/local_write_cfg.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Test helper to write a test config to file — local_write_cfg","text":"Test fixtures testthat","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/local_write_cfg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test helper to write a test config to file — local_write_cfg","text":"","code":"if (FALSE) { # \\dontrun{ tmp_dir <- local_write_cfg() } # }"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/parse_steps_to_run.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse which steps to run from a string — parse_steps_to_run","title":"Parse which steps to run from a string — parse_steps_to_run","text":"Parse steps run string","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/parse_steps_to_run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse which steps to run from a string — parse_steps_to_run","text":"","code":"parse_steps_to_run(step_ids)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/parse_steps_to_run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse which steps to run from a string — parse_steps_to_run","text":"step_ids character string specifying comma-separated identifiers steps workflow. can : 1a, 1b, 1c, 1d, 1e, 1f, 2, 3a, 3b, 4a, 4b, 5a, 5b","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/parse_steps_to_run.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse which steps to run from a string — parse_steps_to_run","text":"character vector step IDs.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/parse_steps_to_run.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse which steps to run from a string — parse_steps_to_run","text":"","code":"parse_steps_to_run(\"1a\") #> [1] \"1a\" parse_steps_to_run(\"1a, 1b\") #> [1] \"1a\" \"1b\" parse_steps_to_run(\"1a,1b,1c,\") #> [1] \"1a\" \"1b\" \"1c\""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/parse_string.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse a string into a number, NA or to remain as a string — parse_string","title":"Parse a string into a number, NA or to remain as a string — parse_string","text":"Parse string number, NA remain string","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/parse_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse a string into a number, NA or to remain as a string — parse_string","text":"","code":"parse_string(x)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/parse_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse a string into a number, NA or to remain as a string — parse_string","text":"x character string parse","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/parse_string.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse a string into a number, NA or to remain as a string — parse_string","text":"One : number, NA original string","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/parse_string.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse a string into a number, NA or to remain as a string — parse_string","text":"","code":"parse_string(\"NA\") #> [1] NA parse_string(\"notanumber\") #> [1] \"notanumber\" parse_string(\"100\") #> [1] 100 parse_string(\"0.45\") #> [1] 0.45 parse_string(\"false\") #> [1] FALSE"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/path_from_components.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a file system path from a vector of individual path components — path_from_components","title":"Construct a file system path from a vector of individual path components — path_from_components","text":"Construct file system path vector individual path components","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/path_from_components.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a file system path from a vector of individual path components — path_from_components","text":"","code":"path_from_components(components)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/path_from_components.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a file system path from a vector of individual path components — path_from_components","text":"components character vector: path components. Note function calls file.path() thing though vector components instead variable number character string arguments.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/path_from_components.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a file system path from a vector of individual path components — path_from_components","text":"constructed path.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/path_from_components.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a file system path from a vector of individual path components — path_from_components","text":"","code":"if (FALSE) { # \\dontrun{ # On *nix/macOS: path_from_components(c(\"\", \"an\", \"absolute\", \"path\")) path_from_components(c(\"a\", \"relative\", \"path\")) # On Windows: path_from_components(c(\"\\\\\\\\\", \"servername\", \"sharename\")) path_from_components(c(\"C:\", \"Data\")) } # }"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/plot_results_jul_2021.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot results for July 2021 — plot_results_jul_2021","title":"Plot results for July 2021 — plot_results_jul_2021","text":"Plot results July 2021","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/plot_results_jul_2021.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot results for July 2021 — plot_results_jul_2021","text":"","code":"plot_results_jul_2021(cfg = NULL)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/plot_results_jul_2021.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot results for July 2021 — plot_results_jul_2021","text":"cfg list nested lists, 'leaf' nodes specifying configuration values. Default: template config returned generate_cfg_template()","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/plot_results_jul_2021.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot results for July 2021 — plot_results_jul_2021","text":"NULL (invisibly).","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/plot_results_jul_2021.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot results for July 2021 — plot_results_jul_2021","text":"","code":"if (FALSE) { # \\dontrun{ plot_results_jul_2021() } # }"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/plot_results_q1_2021.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot results for Q1 2021 — plot_results_q1_2021","title":"Plot results for Q1 2021 — plot_results_q1_2021","text":"Plot results Q1 2021","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/plot_results_q1_2021.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot results for Q1 2021 — plot_results_q1_2021","text":"","code":"plot_results_q1_2021(cfg = NULL)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/plot_results_q1_2021.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot results for Q1 2021 — plot_results_q1_2021","text":"cfg list nested lists, 'leaf' nodes specifying configuration values. Default: template config returned generate_cfg_template()","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/plot_results_q1_2021.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot results for Q1 2021 — plot_results_q1_2021","text":"NULL (invisibly).","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/plot_results_q1_2021.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot results for Q1 2021 — plot_results_q1_2021","text":"","code":"if (FALSE) { # \\dontrun{ plot_results_q1_2021() } # }"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/process_activities.html","id":null,"dir":"Reference","previous_headings":"","what":"Process Activities data — process_activities","title":"Process Activities data — process_activities","text":"Process Activities data","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/process_activities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process Activities data — process_activities","text":"","code":"process_activities(env = NULL, cfg_dir = NULL, cfg_name = NULL, cfg = NULL)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/process_activities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process Activities data — process_activities","text":"env character string specifying environment get path. one 'main', 'ref' 'test'. cfg_dir character string specifying config directory, NULL default. Default: OS-specific path user configuration files user's home directory. cfg_name character string specifying config file name, NULL default. Default: 'config.yml' cfg list nested lists, 'leaf' nodes specifying configuration values. Default: template config returned generate_cfg_template()","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/process_activities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process Activities data — process_activities","text":"NULL (invisibly).","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/process_activities.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process Activities data — process_activities","text":"","code":"if (FALSE) { # \\dontrun{ process_activities() } # }"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/process_exposures_jul_2021.html","id":null,"dir":"Reference","previous_headings":"","what":"Process Exposures data for July 2021 — process_exposures_jul_2021","title":"Process Exposures data for July 2021 — process_exposures_jul_2021","text":"Process Exposures data July 2021","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/process_exposures_jul_2021.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process Exposures data for July 2021 — process_exposures_jul_2021","text":"","code":"process_exposures_jul_2021(cfg = NULL, msoa_lim = NULL)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/process_exposures_jul_2021.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process Exposures data for July 2021 — process_exposures_jul_2021","text":"cfg list nested lists, 'leaf' nodes specifying configuration values. Default: template config returned generate_cfg_template() msoa_lim Number MSOAs process. Default: Number unique MSOAs","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/process_exposures_jul_2021.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process Exposures data for July 2021 — process_exposures_jul_2021","text":"NULL (invisibly).","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/process_exposures_jul_2021.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process Exposures data for July 2021 — process_exposures_jul_2021","text":"","code":"if (FALSE) { # \\dontrun{ process_exposures_jul_2021() } # }"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/process_exposures_q1_2021.html","id":null,"dir":"Reference","previous_headings":"","what":"Process Exposures data for Q1 2021 — process_exposures_q1_2021","title":"Process Exposures data for Q1 2021 — process_exposures_q1_2021","text":"Process Exposures data Q1 2021","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/process_exposures_q1_2021.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process Exposures data for Q1 2021 — process_exposures_q1_2021","text":"","code":"process_exposures_q1_2021(cfg = NULL, msoa_lim = NULL)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/process_exposures_q1_2021.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process Exposures data for Q1 2021 — process_exposures_q1_2021","text":"cfg list nested lists, 'leaf' nodes specifying configuration values. Default: template config returned generate_cfg_template() msoa_lim Number MSOAs process. Default: Number unique MSOAs","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/process_exposures_q1_2021.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process Exposures data for Q1 2021 — process_exposures_q1_2021","text":"NULL (invisibly).","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/process_exposures_q1_2021.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process Exposures data for Q1 2021 — process_exposures_q1_2021","text":"","code":"if (FALSE) { # \\dontrun{ process_exposures_q1_2021() } # }"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/read_user_cfg.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the YAML config file into a named list — read_user_cfg","title":"Read the YAML config file into a named list — read_user_cfg","text":"Read YAML config file named list","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/read_user_cfg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the YAML config file into a named list — read_user_cfg","text":"","code":"read_user_cfg(cfg_dir = NULL, cfg_name = NULL)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/read_user_cfg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the YAML config file into a named list — read_user_cfg","text":"cfg_dir character string specifying config directory, NULL default. Default: OS-specific path user configuration files user's home directory. cfg_name character string specifying config file name, NULL default. Default: 'config.yml'","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/read_user_cfg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read the YAML config file into a named list — read_user_cfg","text":"named list lists corresponds loaded YAML config. See Details section info.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/read_user_cfg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read the YAML config file into a named list — read_user_cfg","text":"String values parsed create appropriate types, example, 'NA' converted NA, 'true' TRUE, '10' 10L, etc.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/read_user_cfg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read the YAML config file into a named list — read_user_cfg","text":"","code":"read_user_cfg() #> Warning: cannot open file '/home/runner/.config/R-dimex/config.yml': No such file or directory #> Error in file(file, \"rt\", encoding = fileEncoding): cannot open the connection if (FALSE) { # \\dontrun{ read_user_cfg(file.path(\"path\", \"to\", \"config\"), \"conf.yml\") } # }"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/recurse_nested.html","id":null,"dir":"Reference","previous_headings":"","what":"Recursively apply a function to each element of a nested list — recurse_nested","title":"Recursively apply a function to each element of a nested list — recurse_nested","text":"Recursively apply function element nested list","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/recurse_nested.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recursively apply a function to each element of a nested list — recurse_nested","text":"","code":"recurse_nested(x, func)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/recurse_nested.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recursively apply a function to each element of a nested list — recurse_nested","text":"x element operate, list type object. func function apply element list.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/recurse_nested.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recursively apply a function to each element of a nested list — recurse_nested","text":"list list provided given function applied element.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/recurse_nested.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recursively apply a function to each element of a nested list — recurse_nested","text":"","code":"nested <- list(   a = \"1\",   b = \"12.5\",   c = \"NA\",   d = \"alphabet\",   e = list(     first = \"NA\",     second = \"notanumber\",     third = \"100\",     fourth = \"0.45\",     fifth = list(       one = \"teal\",       two = \"NA\",       three = \"999\"     )   ) ) recurse_nested(nested, parse_string) #> $a #> [1] 1 #>  #> $b #> [1] 12.5 #>  #> $c #> [1] NA #>  #> $d #> [1] \"alphabet\" #>  #> $e #> $e$first #> [1] NA #>  #> $e$second #> [1] \"notanumber\" #>  #> $e$third #> [1] 100 #>  #> $e$fourth #> [1] 0.45 #>  #> $e$fifth #> $e$fifth$one #> [1] \"teal\" #>  #> $e$fifth$two #> [1] NA #>  #> $e$fifth$three #> [1] 999 #>  #>  #>"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/run_data_prep_pm25_cams.html","id":null,"dir":"Reference","previous_headings":"","what":"Process the pm25 cams data — run_data_prep_pm25_cams","title":"Process the pm25 cams data — run_data_prep_pm25_cams","text":"function implements data preparation step process pm25 cams data. useful side effects, .e. saving processed data.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/run_data_prep_pm25_cams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process the pm25 cams data — run_data_prep_pm25_cams","text":"","code":"run_data_prep_pm25_cams(cfg = NULL)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/run_data_prep_pm25_cams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process the pm25 cams data — run_data_prep_pm25_cams","text":"cfg list nested lists, 'leaf' nodes specifying configuration values. Default: template config returned generate_cfg_template()","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/run_data_prep_pm25_cams.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process the pm25 cams data — run_data_prep_pm25_cams","text":"NULL (invisibly).","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/run_data_prep_pm25_cams.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process the pm25 cams data — run_data_prep_pm25_cams","text":"","code":"if (FALSE) { # \\dontrun{ run_data_prep_pm25_cams() } # }"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/run_data_prep_pm25_emep.html","id":null,"dir":"Reference","previous_headings":"","what":"Process the PM25 EMEP data — run_data_prep_pm25_emep","title":"Process the PM25 EMEP data — run_data_prep_pm25_emep","text":"function implements data preparation step process PM25 EMEP data. useful side effects, .e. saving processed data.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/run_data_prep_pm25_emep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process the PM25 EMEP data — run_data_prep_pm25_emep","text":"","code":"run_data_prep_pm25_emep(cfg = NULL)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/run_data_prep_pm25_emep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process the PM25 EMEP data — run_data_prep_pm25_emep","text":"cfg list nested lists, 'leaf' nodes specifying configuration values. Default: template config returned generate_cfg_template()","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/run_data_prep_pm25_emep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process the PM25 EMEP data — run_data_prep_pm25_emep","text":"NULL (invisibly).","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/run_data_prep_pm25_emep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process the PM25 EMEP data — run_data_prep_pm25_emep","text":"","code":"if (FALSE) { # \\dontrun{ run_data_prep_pm25_emep() } # }"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/run_data_prep_pm25_gm.html","id":null,"dir":"Reference","previous_headings":"","what":"Process the PM25 GM data — run_data_prep_pm25_gm","title":"Process the PM25 GM data — run_data_prep_pm25_gm","text":"function implements data preparation step process PM25 GM data. useful side effects, .e. saving processed data.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/run_data_prep_pm25_gm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process the PM25 GM data — run_data_prep_pm25_gm","text":"","code":"run_data_prep_pm25_gm(cfg = NULL, use_cached_openair_data = NULL)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/run_data_prep_pm25_gm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process the PM25 GM data — run_data_prep_pm25_gm","text":"cfg list nested lists, 'leaf' nodes specifying configuration values. Default: template config returned generate_cfg_template() use_cached_openair_data TRUE cached versions openair data used, FALSE otherwise. Default: TRUE","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/run_data_prep_pm25_gm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process the PM25 GM data — run_data_prep_pm25_gm","text":"NULL (invisibly).","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/run_data_prep_pm25_gm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process the PM25 GM data — run_data_prep_pm25_gm","text":"","code":"if (FALSE) { # \\dontrun{ run_data_prep_pm25_gm() } # }"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/run_data_prep_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Process the Population data — run_data_prep_population","title":"Process the Population data — run_data_prep_population","text":"function implements data preparation step process Population data. useful side effects, .e. saving processed data.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/run_data_prep_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process the Population data — run_data_prep_population","text":"","code":"run_data_prep_population(   env = NULL,   cfg_dir = NULL,   cfg_name = NULL,   cfg = NULL )"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/run_data_prep_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process the Population data — run_data_prep_population","text":"env character string specifying environment get path. one 'main', 'ref' 'test'. cfg_dir character string specifying config directory, NULL default. Default: OS-specific path user configuration files user's home directory. cfg_name character string specifying config file name, NULL default. Default: 'config.yml' cfg list nested lists, 'leaf' nodes specifying configuration values. Default: template config returned generate_cfg_template()","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/run_data_prep_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process the Population data — run_data_prep_population","text":"NULL (invisibly).","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/run_data_prep_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process the Population data — run_data_prep_population","text":"","code":"if (FALSE) { # \\dontrun{ run_data_prep_population() } # }"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/run_data_prep_study_region.html","id":null,"dir":"Reference","previous_headings":"","what":"Process the Study Region data — run_data_prep_study_region","title":"Process the Study Region data — run_data_prep_study_region","text":"function implements data preparation step process Study Region data. useful side effects, .e. saving processed data.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/run_data_prep_study_region.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process the Study Region data — run_data_prep_study_region","text":"","code":"run_data_prep_study_region(   env = NULL,   cfg_dir = NULL,   cfg_name = NULL,   cfg = NULL )"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/run_data_prep_study_region.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process the Study Region data — run_data_prep_study_region","text":"env character string specifying environment get path. one 'main', 'ref' 'test'. cfg_dir character string specifying config directory, NULL default. Default: OS-specific path user configuration files user's home directory. cfg_name character string specifying config file name, NULL default. Default: 'config.yml' cfg list nested lists, 'leaf' nodes specifying configuration values. Default: template config returned generate_cfg_template()","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/run_data_prep_study_region.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process the Study Region data — run_data_prep_study_region","text":"NULL (invisibly).","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/run_data_prep_study_region.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process the Study Region data — run_data_prep_study_region","text":"","code":"if (FALSE) { # \\dontrun{ run_data_prep_study_region() } # }"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/run_data_prep_tus.html","id":null,"dir":"Reference","previous_headings":"","what":"Process the Time Use Survey data — run_data_prep_tus","title":"Process the Time Use Survey data — run_data_prep_tus","text":"function implements data preparation step process Time Use Survey data. useful side effects, .e. saving processed data.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/run_data_prep_tus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process the Time Use Survey data — run_data_prep_tus","text":"","code":"run_data_prep_tus(cfg = NULL)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/run_data_prep_tus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process the Time Use Survey data — run_data_prep_tus","text":"cfg list nested lists, 'leaf' nodes specifying configuration values. Default: template config returned generate_cfg_template()","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/run_data_prep_tus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process the Time Use Survey data — run_data_prep_tus","text":"NULL (invisibly).","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/run_data_prep_tus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process the Time Use Survey data — run_data_prep_tus","text":"","code":"if (FALSE) { # \\dontrun{ run_data_prep_tus() } # }"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/run_workflow.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the steps in the data prep, analysis and visualisation workflow pipeline — run_workflow","title":"Run the steps in the data prep, analysis and visualisation workflow pipeline — run_workflow","text":"function runs step data preparation, data analysis visualisation pipeline. Note generally take appreciable amount time run.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/run_workflow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the steps in the data prep, analysis and visualisation workflow pipeline — run_workflow","text":"","code":"run_workflow(   steps_to_run = NULL,   cfg = NULL,   cfg_overrides = NULL,   cfg_dir = NULL,   cfg_name = NULL,   banner_only = NULL )"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/run_workflow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the steps in the data prep, analysis and visualisation workflow pipeline — run_workflow","text":"steps_to_run character string specifying comma-separated identifiers steps run workflow.  can :  1a, 1b, 1c, 1d, 1e, 1f, 2, 3a, 3b, 4a, 4b, 5a, 5b  Default: \"1a, 1b, 1c, 1d, 1e, 1f, 2, 3a, 3b, 4a, 4b, 5a, 5b\" (run steps) cfg list nested lists, 'leaf' nodes specifying configuration values. Default: template config returned generate_cfg_template() cfg_overrides optional list containing settings override config values run. cfg_dir character string specifying config directory, NULL default. Default: OS-specific path user configuration files user's home directory. cfg_name character string specifying config file name, NULL default. Default: 'config.yml' banner_only boolean indicating whether show banners step run, run function well (useful checking steps run).","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/run_workflow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run the steps in the data prep, analysis and visualisation workflow pipeline — run_workflow","text":"NULL (invisibly).","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/run_workflow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run the steps in the data prep, analysis and visualisation workflow pipeline — run_workflow","text":"","code":"run_workflow(\"1a\", banner_only = TRUE) #> Warning: cannot open file '/home/runner/.config/R-dimex/config.yml': No such file or directory #> Error in file(file, \"rt\", encoding = fileEncoding): cannot open the connection if (FALSE) { # \\dontrun{ run_workflow(\"1a\") run_workflow(\"1a,1b,1c,1d,1e,1f,2,3a,3b,4a,4b,5a,5b\", banner_only = TRUE) run_workflow(banner_only = TRUE) run_workflow(\"4a, 4b\") run_workflow(\"4a, 4b\", banner_only = TRUE) run_workflow(\"1a, 1b, 1c, 1d, 1e, 1f, 2, 3a, 3b, 4a, 4b\") run_workflow() } # }"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/show_workflow_banner.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a banner to the console ahead of running a step in the workflow — show_workflow_banner","title":"Print a banner to the console ahead of running a step in the workflow — show_workflow_banner","text":"Print banner console ahead running step workflow","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/show_workflow_banner.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a banner to the console ahead of running a step in the workflow — show_workflow_banner","text":"","code":"show_workflow_banner(id, title, pad_width = NULL)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/show_workflow_banner.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a banner to the console ahead of running a step in the workflow — show_workflow_banner","text":"id character string step id. title character string title step. pad_width width pad title blanks, unless NA case padding done. Default: NA","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/show_workflow_banner.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print a banner to the console ahead of running a step in the workflow — show_workflow_banner","text":"NULL (invisibly)","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/show_workflow_banner.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print a banner to the console ahead of running a step in the workflow — show_workflow_banner","text":"","code":"show_workflow_banner(\"1\", \"Step 1\") #> ──────────────────────────────────────────────────────────────────────────────── #> STEP 1 #> ┌───────────────────┐ #> │                   │ #> │   -> Step 1 ...   │ #> │                   │ #> └───────────────────┘ show_workflow_banner(\"1\", \"Step 1\", 15) #> ──────────────────────────────────────────────────────────────────────────────── #> STEP 1 #> ┌───────────────────────────┐ #> │                           │ #> │   -> Step 1 ...           │ #> │                           │ #> └───────────────────────────┘"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/skip_if_r_cmd_check_or_not_configured.html","id":null,"dir":"Reference","previous_headings":"","what":"Skip a test on certain conditions — skip_if_r_cmd_check_or_not_configured","title":"Skip a test on certain conditions — skip_if_r_cmd_check_or_not_configured","text":"Skip test running within context 'R CMD CHECK'  configured run, determined value supplied system environment variable.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/skip_if_r_cmd_check_or_not_configured.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Skip a test on certain conditions — skip_if_r_cmd_check_or_not_configured","text":"","code":"skip_if_r_cmd_check_or_not_configured(env_var_id = NULL)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/skip_if_r_cmd_check_or_not_configured.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Skip a test on certain conditions — skip_if_r_cmd_check_or_not_configured","text":"env_var_id system environment variable specified whether run corresponding test.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/skip_if_r_cmd_check_or_not_configured.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Skip a test on certain conditions — skip_if_r_cmd_check_or_not_configured","text":"NULL (invisibly)","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/skip_if_r_cmd_check_or_not_configured.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Skip a test on certain conditions — skip_if_r_cmd_check_or_not_configured","text":"","code":"if (FALSE) { # \\dontrun{ skip_if_r_cmd_check_or_not_configured() Sys.setenv(DIMEX_RUN_HLDT_1D = \"false\") skip_if_r_cmd_check_or_not_configured(\"DIMEX_RUN_HLDT_1D\") } # }"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/validate_cfg.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate the config — validate_cfg","title":"Validate the config — validate_cfg","text":"Check entries config valid.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/validate_cfg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate the config — validate_cfg","text":"","code":"validate_cfg(exp_keys = NULL, cfg_dir = NULL, cfg_name = NULL, cfg = NULL)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/validate_cfg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate the config — validate_cfg","text":"exp_keys character vector expected config keys NULL default. Default: Keys returned get_cfg_template_keys() cfg_dir character string specifying config directory, NULL default. Default: OS-specific path user configuration files user's home directory. cfg_name character string specifying config file name, NULL default. Default: 'config.yml' cfg list nested lists, 'leaf' nodes specifying configuration values. Default: template config returned generate_cfg_template()","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/validate_cfg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate the config — validate_cfg","text":"TRUE config valid, FALSE otherwise.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/validate_cfg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate the config — validate_cfg","text":"","code":"# Validate the default config: validate_cfg() #> Warning: cannot open file '/home/runner/.config/R-dimex/config.yml': No such file or directory #> Error in file(file, \"rt\", encoding = fileEncoding): cannot open the connection # TODO: Add example of validating a custom config"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/write_cfg_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Write the configuration template to file — write_cfg_template","title":"Write the configuration template to file — write_cfg_template","text":"Write configuration template file","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/write_cfg_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write the configuration template to file — write_cfg_template","text":"","code":"write_cfg_template(template_dir_name = NULL, template_name = NULL, cfg = NULL)"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/write_cfg_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write the configuration template to file — write_cfg_template","text":"template_dir_name character string: name config template sub-directory NULL default. Default: 'config' template_name character string: name config template file NULL default. Default: name returned get_cfg_template_name() cfg list nested lists, 'leaf' nodes specifying configuration values. Default: template config returned generate_cfg_template()","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/write_cfg_template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write the configuration template to file — write_cfg_template","text":"NULL (invisibly)","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/write_cfg_template.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write the configuration template to file — write_cfg_template","text":"","code":"write_cfg_template()"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/write_user_cfg.html","id":null,"dir":"Reference","previous_headings":"","what":"Write the user-specific config to file — write_user_cfg","title":"Write the user-specific config to file — write_user_cfg","text":"Write user-specific configuration file. config supplied, function can create fresh config file copying template appropriate location.","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/write_user_cfg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write the user-specific config to file — write_user_cfg","text":"","code":"write_user_cfg(   cfg = NULL,   cfg_dir = NULL,   cfg_name = NULL,   template_dir_name = NULL,   template_name = NULL,   overwrite = NULL )"},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/write_user_cfg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write the user-specific config to file — write_user_cfg","text":"cfg list nested lists, 'leaf' nodes specifying configuration values. Default: template config returned generate_cfg_template() cfg_dir character string specifying config directory, NULL default. Default: OS-specific path user configuration files user's home directory. cfg_name character string specifying config file name, NULL default. Default: 'config.yml' template_dir_name character string: name config template sub-directory NULL default. Default: 'config' template_name character string: name config template file NULL default. Default: name returned get_cfg_template_name() overwrite boolean indicate whether existing config file overwritten. Default: FALSE","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/write_user_cfg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write the user-specific config to file — write_user_cfg","text":"NULL (invisibly)","code":""},{"path":"https://UoMResearchIT.github.io/SPFFinalReport/reference/write_user_cfg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write the user-specific config to file — write_user_cfg","text":"","code":"if (FALSE) { # \\dontrun{ write_user_cfg() write_user_cfg(overwrite = TRUE)  # Override a value in the config template before saving cfg <- generate_cfg_template() cfg <- modifyList(cfg, list(dat = list(raw = list(base = \"Data-dir\")))) write_user_cfg(cfg) } # }"}]
